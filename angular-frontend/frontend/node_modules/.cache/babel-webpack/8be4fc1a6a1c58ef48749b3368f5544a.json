{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as Notifications from 'src/app/interfaces/globalNotifications/notifications';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/role/role.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./role-card/role-card.component\";\n\nfunction RolesComponent_app_role_card_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-role-card\", 18);\n  }\n\n  if (rf & 2) {\n    const role_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"role\", role_r3);\n  }\n}\n\nexport let RolesComponent = /*#__PURE__*/(() => {\n  class RolesComponent {\n    constructor(roleService) {\n      this.roleService = roleService;\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.roles = yield _this.roleService.getRoles().toPromise();\n      })();\n    }\n\n    onRoleClick(accessLevel, addRoleForm) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var _a;\n\n        const roleName = (_a = addRoleForm.form.get('role_name')) === null || _a === void 0 ? void 0 : _a.value; //alert(`access level: ${accessLevel} and roleName: ${roleName}`);\n\n        let newRole = {\n          id: 0,\n          roleType: roleName,\n          accessLevel: accessLevel,\n          projectUserRoleLinks: []\n        };\n\n        _this2.roleService.addRole(newRole).subscribe(response => {\n          //alert(\"Role Added\")\n          Notifications.addNewAlert(`New Role Created With Name: ${response.roleType} `, \"success\");\n\n          _this2.roles.push(response);\n        }, error => {\n          alert(error.message);\n        });\n      })();\n    }\n\n  }\n\n  RolesComponent.ɵfac = function RolesComponent_Factory(t) {\n    return new (t || RolesComponent)(i0.ɵɵdirectiveInject(i1.RoleService));\n  };\n\n  RolesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RolesComponent,\n    selectors: [[\"app-roles\"]],\n    decls: 31,\n    vars: 1,\n    consts: [[1, \"content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"id\", \"addTagDropDown\", \"ngbDropdownToggle\", \"\", \"rel\", \"tooltip\", \"title\", \"Add New Role\", 1, \"btn\", \"btn-info\", \"btn-link\", \"btn-outline-info\"], [1, \"material-icons\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownFormTag\"], [1, \"px-4\", \"py-3\"], [\"addRoleForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"assignUserDropdownFormUsername\"], [\"ngModel\", \"\", \"name\", \"role_name\", \"required\", \"\", \"type\", \"text\", \"placeholder\", \"Role Name...\", 1, \"form-control\"], [\"input\", \"\"], [\"id\", \"priorityDropDown\", \"ngbDropdownToggle\", \"\", \"type\", \"button\", 1, \"btn\", \"btn-outline-info\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"priorityDropDown\"], [\"ngbDropdownItem\", \"\", 3, \"click\"], [\"class\", \" col-md-3 col-sm-2\", 3, \"role\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\", \"col-sm-2\", 3, \"role\"]],\n    template: function RolesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵtext(6, \" Add New Role \");\n        i0.ɵɵelementStart(7, \"i\", 6);\n        i0.ɵɵtext(8, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8, 9);\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"label\", 11);\n        i0.ɵɵtext(14, \"New Role Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 12, 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10);\n        i0.ɵɵelementStart(18, \"div\", 4);\n        i0.ɵɵelementStart(19, \"button\", 14);\n        i0.ɵɵtext(20, \" Role \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 15);\n        i0.ɵɵelementStart(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RolesComponent_Template_button_click_22_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          return ctx.onRoleClick(1, _r0);\n        });\n        i0.ɵɵtext(23, \"Read\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RolesComponent_Template_button_click_24_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          return ctx.onRoleClick(2, _r0);\n        });\n        i0.ɵɵtext(25, \"Read & Write\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RolesComponent_Template_button_click_26_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          return ctx.onRoleClick(3, _r0);\n        });\n        i0.ɵɵtext(27, \"Owner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 2);\n        i0.ɵɵtemplate(29, RolesComponent_app_role_card_29_Template, 1, 1, \"app-role-card\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(29);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n      }\n    },\n    directives: [i2.NgbDropdown, i2.NgbDropdownToggle, i2.NgbDropdownMenu, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.RequiredValidator, i2.NgbDropdownItem, i4.NgForOf, i5.RoleCardComponent],\n    styles: [\"\"]\n  });\n  return RolesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}