{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProjectComponent = class ProjectComponent {\n  constructor(router, datepipe, projectService, userService, roleService) {\n    this.router = router;\n    this.datepipe = datepipe;\n    this.projectService = projectService;\n    this.userService = userService;\n    this.roleService = roleService;\n    this.usersPageNo = 0; //I passed the entire already loaded project object from the projects menu when rerouting as a navigation state variable    \n\n    const navigation = this.router.getCurrentNavigation();\n\n    if (navigation) {\n      this.project = navigation.extras.state ? navigation.extras.state.project : 0;\n    } //On page refresh, the state is lost along with the object so I reroute the user back to projects \n\n\n    if (this.project.id == null) {\n      this.router.navigateByUrl(\"/projects\");\n    }\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.noOfUsers = yield _this.projectService.getProjectNoOfUsers(_this.project.id).toPromise();\n      _this.stats = yield _this.projectService.getProjectStats(_this.project.id).toPromise();\n      _this.users = yield _this.userService.getUsersOfProject(_this.project.id, _this.usersPageNo).toPromise();\n      _this.noOfTickets = _this.stats[0] + _this.stats[1];\n      const userId = localStorage.getItem(\"user_id\");\n      _this.thisUserLink = yield _this.projectService.getUserProjectLink(_this.project.id, Number(userId)).toPromise();\n      _this.roles = yield _this.roleService.getRoles().toPromise();\n    })();\n  }\n\n  nextUsers() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.users.length != 0) {\n        console.warn(\"click called\");\n        _this2.usersPageNo += 1;\n        _this2.users = yield _this2.userService.getUsersOfProject(_this2.project.id, _this2.usersPageNo).toPromise();\n      }\n    })();\n  }\n\n  previousUsers() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3.usersPageNo !== 0) {\n        _this3.usersPageNo -= 1;\n        console.warn(\"click called\");\n        _this3.users = yield _this3.userService.getUsersOfProject(_this3.project.id, _this3.usersPageNo).toPromise();\n      }\n    })();\n  }\n\n  onAddUser(addUserForm) {\n    var _a;\n\n    const username = (_a = addUserForm.form.get('username')) === null || _a === void 0 ? void 0 : _a.value;\n    alert(\"Username: \" + username);\n  }\n\n};\nProjectComponent = __decorate([Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})], ProjectComponent);\nexport { ProjectComponent };","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/project/project.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NavigationStart, Router, RouterEvent } from '@angular/router';\nimport {Observable, OperatorFunction} from 'rxjs';\nimport {debounceTime, delay, distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport { Project } from 'src/app/interfaces/project';\nimport { ProjectUserRoleLink } from 'src/app/interfaces/project-user-role-link';\nimport { Role } from 'src/app/interfaces/role';\nimport { User } from 'src/app/interfaces/user';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { RoleService } from 'src/app/services/role/role.service';\nimport { UserServiceService } from 'src/app/services/user/user-service.service';\n\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n  public model: any;\n\n  project!: Project;\n  noOfUsers!: number;\n  stats!: number[];\n  noOfTickets!: number;\n  usersPageNo = 0;\n  users!: User[];\n  roles!: Role[];\n  thisUserLink!:ProjectUserRoleLink;\n\n  constructor(public router:Router, public datepipe:DatePipe, public projectService:ProjectService, public userService: UserServiceService, \n    public roleService: RoleService) { \n    //I passed the entire already loaded project object from the projects menu when rerouting as a navigation state variable    \n    const navigation  = this.router.getCurrentNavigation();\n     if(navigation){\n      this.project = navigation.extras.state ? navigation.extras.state.project : 0;\n    }\n\n    //On page refresh, the state is lost along with the object so I reroute the user back to projects \n    if(this.project.id==null){\n      this.router.navigateByUrl(\"/projects\");\n    }\n\n\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.noOfUsers = await this.projectService.getProjectNoOfUsers(this.project.id).toPromise();\n    this.stats = await this.projectService.getProjectStats(this.project.id).toPromise();\n    this.users = await this.userService.getUsersOfProject(this.project.id,this.usersPageNo).toPromise();\n    this.noOfTickets = this.stats[0]+this.stats[1]\n    const userId= localStorage.getItem(\"user_id\");\n    this.thisUserLink = await this.projectService.getUserProjectLink(this.project.id,Number(userId)).toPromise();\n    this.roles = await this.roleService.getRoles().toPromise();\n  }\n\n\n  public async nextUsers(){       \n    if(this.users.length!=0){\n      console.warn(\"click called\");\n      this.usersPageNo+=1;\n      this.users = await this.userService.getUsersOfProject(this.project.id,this.usersPageNo).toPromise();\n    }\n  }\n  public async previousUsers(){\n    if(this.usersPageNo!==0){\n      this.usersPageNo-=1;\n      console.warn(\"click called\");\n      this.users = await this.userService.getUsersOfProject(this.project.id,this.usersPageNo).toPromise();\n    }\n  }\n\n  public onAddUser(addUserForm: NgForm):void{\n    const username = addUserForm.form.get('username')?.value;\n    alert(\"Username: \"+ username);\n    \n\n  }\n\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}