{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditTicketComponent = class EditTicketComponent {\n  constructor(router, priorityService, ticketService) {\n    this.router = router;\n    this.priorityService = priorityService;\n    this.ticketService = ticketService;\n    this.selectedStatus = \"\";\n    const navigation = this.router.getCurrentNavigation();\n\n    if (navigation) {\n      this.ticket = navigation.extras.state ? navigation.extras.state.ticket : 0;\n    } //On page refresh, the state is lost along with the object so I reroute the user back to tickets \n\n\n    if (this.ticket.id == null) {\n      this.router.navigateByUrl(\"/tickets\");\n    }\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.priorities = yield _this.priorityService.getPriorities().toPromise();\n    })();\n  }\n\n  setPriority(priority) {\n    this.selectedPriority = priority;\n  }\n\n  setStatus(status) {\n    this.selectedStatus = status;\n  }\n\n  onUpdateTicket(updateTicketForm) {//const projectTitle = updateProjectForm.form.get('project_title')?.value;\n\n    return _asyncToGenerator(function* () {})();\n  }\n\n};\nEditTicketComponent = __decorate([Component({\n  selector: 'app-edit-ticket',\n  templateUrl: './edit-ticket.component.html',\n  styleUrls: ['./edit-ticket.component.css']\n})], EditTicketComponent);\nexport { EditTicketComponent };","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/edit-ticket/edit-ticket.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AAaA,IAAa,mBAAmB,GAAhC,MAAa,mBAAb,CAAgC;AAK9B,EAAA,WAAA,CAAmB,MAAnB,EAAyC,eAAzC,EAAiF,aAAjF,EAA4G;AAAzF,SAAA,MAAA,GAAA,MAAA;AAAsB,SAAA,eAAA,GAAA,eAAA;AAAwC,SAAA,aAAA,GAAA,aAAA;AAsBjF,SAAA,cAAA,GAAe,EAAf;AArBE,UAAM,UAAU,GAAI,KAAK,MAAL,CAAY,oBAAZ,EAApB;;AACC,QAAG,UAAH,EAAc;AACb,WAAK,MAAL,GAAc,UAAU,CAAC,MAAX,CAAkB,KAAlB,GAA0B,UAAU,CAAC,MAAX,CAAkB,KAAlB,CAAwB,MAAlD,GAA2D,CAAzE;AACD,KAJyG,CAQ1G;;;AACA,QAAG,KAAK,MAAL,CAAY,EAAZ,IAAgB,IAAnB,EAAwB;AACtB,WAAK,MAAL,CAAY,aAAZ,CAA0B,UAA1B;AACD;AACF;;AAEK,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,KAAI,CAAC,UAAL,SAAwB,KAAI,CAAC,eAAL,CAAqB,aAArB,GAAqC,SAArC,EAAxB;AADY;AAEb;;AACM,EAAA,WAAW,CAAC,QAAD,EAAkB;AAClC,SAAK,gBAAL,GAAsB,QAAtB;AAGD;;AAEM,EAAA,SAAS,CAAC,MAAD,EAAc;AAC5B,SAAK,cAAL,GAAoB,MAApB;AAGD;;AAEY,EAAA,cAAc,CAAC,gBAAD,EAAyB,CAClD;;AADkD;AAKnD;;AAvC6B,CAAhC;AAAa,mBAAmB,GAAA,UAAA,CAAA,CAL/B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,iBADD;AAET,EAAA,WAAW,EAAE,8BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,6BAAD;AAHF,CAAD,CAKsB,CAAA,EAAnB,mBAAmB,CAAnB;SAAA,mB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Priority } from 'src/app/interfaces/priority';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { PriorityService } from 'src/app/services/priority/priority.service';\nimport { TicketService } from 'src/app/services/ticket/ticket.service';\n\n@Component({\n  selector: 'app-edit-ticket',\n  templateUrl: './edit-ticket.component.html',\n  styleUrls: ['./edit-ticket.component.css']\n})\nexport class EditTicketComponent implements OnInit {\n\n  ticket !: Ticket;\n  priorities!:Priority[];\n  selectedPriority!: Priority;\n  constructor(public router:Router, public priorityService:PriorityService, public ticketService:TicketService) { \n    const navigation  = this.router.getCurrentNavigation();\n     if(navigation){\n      this.ticket = navigation.extras.state ? navigation.extras.state.ticket : 0;\n    }\n\n    \n\n    //On page refresh, the state is lost along with the object so I reroute the user back to tickets \n    if(this.ticket.id==null){\n      this.router.navigateByUrl(\"/tickets\");\n    }\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.priorities = await this.priorityService.getPriorities().toPromise();\n  }\n  public setPriority(priority:Priority):void{\n    this.selectedPriority=priority;\n    \n\n  }\n  selectedStatus=\"\";\n  public setStatus(status:string):void{\n    this.selectedStatus=status;\n    \n\n  }\n\n  public async onUpdateTicket(updateTicketForm: NgForm):Promise<void>{\n    //const projectTitle = updateProjectForm.form.get('project_title')?.value;\n    \n\n\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}