{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TicketService = /*#__PURE__*/(() => {\n  class TicketService {\n    constructor(http) {\n      this.http = http;\n      this.apiServerUrl = environment.apiBaseUrl;\n    }\n\n    getAssignedTicketsOfUser(pageNo) {\n      const userId = localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"pageNo\", pageNo);\n      return this.http.get(`${this.apiServerUrl}/api/user/${userId}/tickets/assigned`, {\n        params: params\n      });\n    }\n\n    getCreatedTicketsOfUser(pageNo) {\n      const userId = localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"pageNo\", pageNo);\n      return this.http.get(`${this.apiServerUrl}/api/user/${userId}/tickets`, {\n        params: params\n      });\n    }\n\n    getTicketsOfProject(projectId, pageNo) {\n      let params = new HttpParams().set(\"pageNo\", pageNo);\n      return this.http.get(`${this.apiServerUrl}/api/tickets/project/${projectId}`, {\n        params: params\n      });\n    }\n\n    getTicketsOfProjectsWithUser(pageNo, sortBy, getBy, tagId) {\n      const userId = localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"pageNo\", pageNo).set(\"sortBy\", sortBy).set(\"getBy\", getBy).set(\"tagId\", tagId);\n      return this.http.get(`${this.apiServerUrl}/api/tickets/user/${userId}`, {\n        params: params\n      });\n    }\n\n    getCommentsCountForTicket(ticketId) {\n      return this.http.get(`${this.apiServerUrl}/api/tickets/${ticketId}/count`);\n    }\n\n    getTicketHistory(ticketId, pageNo) {\n      let params = new HttpParams().set(\"pageNo\", pageNo);\n      return this.http.get(`${this.apiServerUrl}/api/tickets/${ticketId}/history`, {\n        params: params\n      });\n    }\n\n    getTicketComments(ticketId, pageNo) {\n      let params = new HttpParams().set(\"pageNo\", pageNo);\n      return this.http.get(`${this.apiServerUrl}/api/tickets/${ticketId}/comments`, {\n        params: params\n      });\n    }\n\n    addComment(ticketId, userId, newComment) {\n      //const userId= localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"userId\", userId);\n      let header = new HttpHeaders().set('content-type', 'application/json');\n      let body = JSON.stringify(newComment);\n      return this.http.post(`${this.apiServerUrl}/api/tickets/${ticketId}/comments`, body, {\n        params: params,\n        headers: header\n      });\n    }\n\n    updateTicket(ticketId, priorityId, newTicket) {\n      //const userId= localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"priorityId\", priorityId);\n      let header = new HttpHeaders().set('content-type', 'application/json');\n      let body = JSON.stringify(newTicket);\n      return this.http.patch(`${this.apiServerUrl}/api/tickets/${ticketId}`, body, {\n        params: params,\n        headers: header\n      });\n    }\n\n    addTicket(priorityId, projectId, userId, newTicket) {\n      //const userId= localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"priorityId\", priorityId).set(\"userId\", userId);\n      let header = new HttpHeaders().set('content-type', 'application/json');\n      let body = JSON.stringify(newTicket);\n      return this.http.post(`${this.apiServerUrl}/api/tickets/project/${projectId}`, body, {\n        params: params,\n        headers: header\n      });\n    }\n\n    assignUserToTicket(userId, ticketId) {\n      return this.http.patch(`${this.apiServerUrl}/api/tickets/${ticketId}/assign/${userId}`, {\n        body: ''\n      });\n    }\n\n    addTagToTicket(tagId, ticketId) {\n      return this.http.post(`${this.apiServerUrl}/api/tickets/${ticketId}/tag/${tagId}`, {\n        body: ''\n      });\n    }\n\n    getTicketById(ticketId) {\n      return this.http.get(`${this.apiServerUrl}/api/tickets/${ticketId}`);\n    }\n\n    getTicketsCountByPriority() {\n      return this.http.get(`${this.apiServerUrl}/api/tickets/priority/count`);\n    } //gets a 2 item int array. was to lazy to make a dto\n\n\n    getTicketsCountAllAndFnished() {\n      return this.http.get(`${this.apiServerUrl}/api/tickets/stats/allAndFinished`);\n    } //gets a 2 item int array. was to lazy to make a dto tbh\n\n\n    getUserAssignedAndCreatedTicketsCount(userId) {\n      return this.http.get(`${this.apiServerUrl}/api/tickets/${userId}/stats`);\n    }\n\n  }\n\n  TicketService.ɵfac = function TicketService_Factory(t) {\n    return new (t || TicketService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TicketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TicketService,\n    factory: TicketService.ɵfac,\n    providedIn: 'root'\n  });\n  return TicketService;\n})();","map":null,"metadata":{},"sourceType":"module"}