{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as Notifications from 'src/app/interfaces/globalNotifications/notifications';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tag/tag.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/forms\";\nexport class TagCardComponent {\n  constructor(tagService) {\n    this.tagService = tagService;\n  }\n\n  ngOnInit() {}\n\n  onUpdateTag(updateTagForm) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const tag = (_a = updateTagForm.form.get('tag_name')) === null || _a === void 0 ? void 0 : _a.value;\n      _this.tag.tag = tag;\n\n      _this.tagService.updateTag(_this.tag).toPromise();\n\n      Notifications.addNewAlert(\"Tag Updated with Name: \" + _this.tag.tag, \"success\");\n    })();\n  }\n\n}\n\nTagCardComponent.ɵfac = function TagCardComponent_Factory(t) {\n  return new (t || TagCardComponent)(i0.ɵɵdirectiveInject(i1.TagService));\n};\n\nTagCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TagCardComponent,\n  selectors: [[\"app-tag-card\"]],\n  inputs: {\n    tag: \"tag\"\n  },\n  decls: 24,\n  vars: 2,\n  consts: [[1, \"card\", \"card-stats\"], [1, \"card-header\", \"card-header-primary\", \"card-header-icon\"], [1, \"card-icon\"], [1, \"material-icons\"], [1, \"card-category\"], [1, \"card-title\"], [1, \"card-footer\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"id\", \"assignUserDropdownForm\", \"ngbDropdownToggle\", \"\", \"rel\", \"tooltip\", \"title\", \"Assign User To Ticket\", 1, \"btn\", \"btn-outline-primary\", \"tn\", \"btn-primary\", \"btn-link\", \"btn-sm\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownFormTag\"], [1, \"px-4\", \"py-3\", 3, \"ngSubmit\"], [\"updateTagForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"assignUserDropdownFormUsername\"], [\"ngModel\", \"\", \"name\", \"tag_name\", \"required\", \"\", \"type\", \"text\", \"placeholder\", \"Tag Name...\", 1, \"form-control\"], [\"input\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function TagCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r2 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"i\", 3);\n      i0.ɵɵtext(4, \"sell\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\", 4);\n      i0.ɵɵtext(6, \"Tag:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h3\", 5);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 6);\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelementStart(11, \"button\", 8);\n      i0.ɵɵelementStart(12, \"i\", 3);\n      i0.ɵɵtext(13, \"edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 9);\n      i0.ɵɵelementStart(15, \"form\", 10, 11);\n      i0.ɵɵlistener(\"ngSubmit\", function TagCardComponent_Template_form_ngSubmit_15_listener() {\n        i0.ɵɵrestoreView(_r2);\n\n        const _r0 = i0.ɵɵreference(16);\n\n        return ctx.onUpdateTag(_r0);\n      });\n      i0.ɵɵelementStart(17, \"div\", 12);\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \"New Tag Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14, 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"button\", 16);\n      i0.ɵɵtext(23, \"Update Tag\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(16);\n\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\" \", ctx.tag.tag, \" \");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  directives: [i2.NgbDropdown, i2.NgbDropdownToggle, i2.NgbDropdownMenu, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.RequiredValidator],\n  styles: [\"\"]\n});","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/tags/tag-card/tag-card.component.ts","/home/geri/Documents/angular-frontend/frontend/src/app/components/tags/tag-card/tag-card.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Tag } from 'src/app/interfaces/tag';\nimport { TagService } from 'src/app/services/tag/tag.service';\nimport * as Notifications from 'src/app/interfaces/globalNotifications/notifications'; \n\n@Component({\n  selector: 'app-tag-card',\n  templateUrl: './tag-card.component.html',\n  styleUrls: ['./tag-card.component.css']\n})\nexport class TagCardComponent implements OnInit {\n\n\n  @Input()\n  tag!: Tag;\n\n  constructor(public tagService: TagService) { }\n\n  ngOnInit(): void {\n  }\n\n  public async onUpdateTag(updateTagForm: NgForm):Promise<void>{\n    const tag = updateTagForm.form.get('tag_name')?.value;\n    \n    this.tag.tag=tag\n    this.tagService.updateTag(this.tag).toPromise();\n    Notifications.addNewAlert(\"Tag Updated with Name: \"+this.tag.tag,\"success\")\n  }\n  \n\n}\n","<div class=\"card card-stats\">\n    <div class=\"card-header card-header-primary card-header-icon\">\n      <div class=\"card-icon\">\n        <i class=\"material-icons\">sell</i>\n      </div>\n      <p class=\"card-category\">Tag:</p>\n      <h3 class=\"card-title\">\n        {{tag.tag}}\n      </h3>\n    </div>\n    <div class=\"card-footer\">      \n      <div ngbDropdown class=\"d-inline-block\">\n        <button class=\"btn btn-outline-primary tn btn-primary btn-link btn-sm\" id=\"assignUserDropdownForm\" ngbDropdownToggle\n        rel=\"tooltip\"\n          title=\"Assign User To Ticket\">\n          <i class=\"material-icons\">edit</i>\n        </button>\n        <div ngbDropdownMenu aria-labelledby=\"dropdownFormTag\">\n          <form class=\"px-4 py-3\"  #updateTagForm=\"ngForm\" (ngSubmit)=\"onUpdateTag(updateTagForm)\">\n            <div class=\"form-group\">\n              <label for=\"assignUserDropdownFormUsername\">New Tag Name</label>\n              <input ngModel name=\"tag_name\" #input required type=\"text\" class=\"form-control\" placeholder=\"Tag Name...\" >\n            </div>\n           \n            <button [disabled]=\"!updateTagForm.valid\" type=\"submit\" class=\"btn btn-primary\">Update Tag</button>\n          </form>\n         \n        </div>\n      </div>\n    </div>\n   \n  </div>\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}