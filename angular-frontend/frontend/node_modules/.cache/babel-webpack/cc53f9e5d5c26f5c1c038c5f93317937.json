{"ast":null,"code":"import { ɵɵdefineInjectable, Injectable, Component, ElementRef, Directive, Input, HostListener, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction NotifComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(2, \"h4\", 3);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"span\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function NotifComponent_div_0_Template_span_click_4_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.close();\n    });\n    ɵngcc0.ɵɵtext(5, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"div\", 5);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"br\");\n    ɵngcc0.ɵɵelement(8, \"br\");\n    ɵngcc0.ɵɵelement(9, \"br\");\n    ɵngcc0.ɵɵelement(10, \"br\");\n    ɵngcc0.ɵɵelement(11, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"setting\", ctx_r0.setting);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.setting.title);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.setting.body, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nlet AngularNotificationService = /*#__PURE__*/(() => {\n  class AngularNotificationService {\n    constructor() {}\n\n    setProperties(prop) {\n      this.properties = prop;\n    }\n\n    getProperties() {\n      return this.properties;\n    }\n\n  }\n\n  AngularNotificationService.ɵfac = function AngularNotificationService_Factory(t) {\n    return new (t || AngularNotificationService)();\n  };\n\n  AngularNotificationService.ɵprov = ɵɵdefineInjectable({\n    factory: function AngularNotificationService_Factory() {\n      return new AngularNotificationService();\n    },\n    token: AngularNotificationService,\n    providedIn: \"root\"\n  });\n  return AngularNotificationService;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet AngularNotificationComponent = /*#__PURE__*/(() => {\n  class AngularNotificationComponent {\n    constructor() {\n      console.log('in lib');\n    }\n\n    ngOnInit() {}\n\n  }\n\n  AngularNotificationComponent.ɵfac = function AngularNotificationComponent_Factory(t) {\n    return new (t || AngularNotificationComponent)();\n  };\n\n  AngularNotificationComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: AngularNotificationComponent,\n    selectors: [[\"lib-angular-notification\"]],\n    decls: 2,\n    vars: 0,\n    template: function AngularNotificationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtext(1, \" angular-notification works!hhhh \");\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return AngularNotificationComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NotwidthDirective = /*#__PURE__*/(() => {\n  class NotwidthDirective {\n    constructor(el) {\n      this.el = el;\n    }\n\n    ngOnInit() {\n      this.setUp(this.setting);\n    }\n\n    highlight(color) {\n      this.el.nativeElement.style.backgroundColor = color;\n    }\n\n    setWidth(width) {\n      this.el.nativeElement.style.width = width;\n    }\n\n    setUp(setting) {\n      // width\n      this.el.nativeElement.style.width = setting.width; // classes\n\n      if (setting.type === 'warn') {\n        this.el.nativeElement.classList.add('yellow');\n      } else if (setting.type === 'danger') {\n        this.el.nativeElement.classList.add('red');\n      } else if (setting.type === 'success') {\n        this.el.nativeElement.classList.add('green');\n      } else {\n        this.el.nativeElement.classList.add('default');\n      } // position\n\n\n      if (setting.position === 'bottom right') {\n        this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n        this.el.nativeElement.classList.add('bottom-right');\n      } else if (setting.position === 'top left') {\n        this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n        this.el.nativeElement.classList.add('top-left');\n      } else if (setting.position === 'bottom left') {\n        this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n        this.el.nativeElement.classList.add('bottom-left');\n      } else if (setting.position === 'center') {\n        this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n        this.el.nativeElement.classList.add('center');\n      } else {\n        this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n        this.el.nativeElement.classList.add('top-right');\n      } // opacity\n\n\n      this.el.nativeElement.style.opacity = setting.opacity; // background color\n\n      this.el.nativeElement.style.background = setting.background; // duration\n\n      if (setting.duration === undefined) {\n        this.setDuration(4000);\n      } else {\n        this.setDuration(setting.duration);\n      }\n    }\n\n    setDuration(time) {\n      setTimeout(() => {\n        // this.el.nativeElement.style.display = 'none';\n        this.el.nativeElement.style.visibility = 'hidden';\n        this.el.nativeElement.style.opacity = '0';\n      }, time);\n    }\n\n    change() {\n      console.log(' i see fire');\n    }\n\n  }\n\n  NotwidthDirective.ɵfac = function NotwidthDirective_Factory(t) {\n    return new (t || NotwidthDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  NotwidthDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: NotwidthDirective,\n    selectors: [[\"\", \"libNotwidth\", \"\"]],\n    hostBindings: function NotwidthDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NotwidthDirective_click_HostBindingHandler() {\n          return ctx.change();\n        });\n      }\n    },\n    inputs: {\n      setting: \"setting\"\n    }\n  });\n  return NotwidthDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet NotifComponent = /*#__PURE__*/(() => {\n  class NotifComponent {\n    constructor(Service) {\n      this.Service = Service;\n      this.open = true;\n    }\n\n    ngOnInit() {\n      /* this.setting = {\r\n         width: '300px',\r\n         type: 'warn',\r\n         title: 'notification title',\r\n         body: 'this is a message of warning ',\r\n         position: 'bottom right',\r\n         opacity: '1',\r\n         duration: 10000,\r\n         background: 'yellow'\r\n       };*/\n      this.setting = this.Service.getProperties();\n      console.log('juuuu ', this.setting);\n    }\n\n    close() {\n      this.open = false;\n    }\n\n  }\n\n  NotifComponent.ɵfac = function NotifComponent_Factory(t) {\n    return new (t || NotifComponent)(ɵngcc0.ɵɵdirectiveInject(AngularNotificationService));\n  };\n\n  NotifComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NotifComponent,\n    selectors: [[\"lib-notif\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"notif-container\", 4, \"ngIf\"], [1, \"notif-container\"], [\"libNotwidth\", \"\", 1, \"notif-box\", 3, \"setting\"], [1, \"title\"], [\"title\", \"close\", 1, \"close\", 3, \"click\"], [1, \"notif-body\", 3, \"innerHTML\"]],\n    template: function NotifComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NotifComponent_div_0_Template, 12, 3, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.open);\n      }\n    },\n    directives: [ɵngcc1.NgIf, NotwidthDirective],\n    styles: [\".notif-box[_ngcontent-%COMP%]{font-family:'Noto Sans SC',sans-serif;padding:10px;box-shadow:0 1px 0 -1px rgb(0 0 0 / 20%),0 1px 14px -2px rgb(0 0 0 / 14%),0 1px 3px 0 rgb(0 0 0 / 12%);border-radius:4px;border:0;width:30%;border-left:6px solid #6772e5;position:absolute;transition:opacity .6s,visibility .6s;margin-top:10px;z-index:10}.title[_ngcontent-%COMP%]{width:92%;display:inline-block;font-size:16px;margin-top:5px;color:#242832;margin-bottom:10px}.close[_ngcontent-%COMP%]{cursor:pointer;float:right;margin-right:5px}.notif-body[_ngcontent-%COMP%]{font-size:14px;color:#97999e}.green[_ngcontent-%COMP%]{border-left:6px solid #00d563}.red[_ngcontent-%COMP%]{border-left:6px solid #ef3934}.yellow[_ngcontent-%COMP%]{border-left:6px solid #ff9500}.default[_ngcontent-%COMP%]{border-left:6px solid #6772e5}.top-right[_ngcontent-%COMP%]{top:0;right:15px}.bottom-left[_ngcontent-%COMP%]{bottom:-30vh;left:15px}.bottom-right[_ngcontent-%COMP%]{bottom:15px;right:15px}.top-left[_ngcontent-%COMP%]{top:15px;left:15px}.center[_ngcontent-%COMP%]{top:50%;left:50%;transform:translate(-50%,-50%)}\"]\n  });\n  return NotifComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nNotifComponent.ctorParameters = () => [{\n  type: AngularNotificationService\n}];\n\nlet AngularNotificationModule = /*#__PURE__*/(() => {\n  class AngularNotificationModule {}\n\n  AngularNotificationModule.ɵfac = function AngularNotificationModule_Factory(t) {\n    return new (t || AngularNotificationModule)();\n  };\n\n  AngularNotificationModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: AngularNotificationModule\n  });\n  AngularNotificationModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[BrowserModule]]\n  });\n  return AngularNotificationModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularNotificationModule, {\n    declarations: function () {\n      return [AngularNotificationComponent, NotwidthDirective, NotifComponent];\n    },\n    imports: function () {\n      return [BrowserModule];\n    },\n    exports: function () {\n      return [AngularNotificationComponent, NotifComponent];\n    }\n  });\n})();\n/*\r\n * Public API Surface of angular-notification\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AngularNotificationComponent, AngularNotificationModule, AngularNotificationService, NotifComponent, NotwidthDirective }; //# sourceMappingURL=angular-notification-alert.js.map","map":null,"metadata":{},"sourceType":"module"}