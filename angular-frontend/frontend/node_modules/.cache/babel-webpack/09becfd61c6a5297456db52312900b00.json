{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as Notifications from 'src/app/interfaces/globalNotifications/notifications';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/tag/tag.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./tag-card/tag-card.component\";\n\nfunction TagsComponent_app_tag_card_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-tag-card\", 16);\n  }\n\n  if (rf & 2) {\n    const tag_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"tag\", tag_r3);\n  }\n}\n\nexport let TagsComponent = /*#__PURE__*/(() => {\n  class TagsComponent {\n    constructor(tagService) {\n      this.tagService = tagService;\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.tags = yield _this.tagService.getTags().toPromise();\n      })();\n    }\n\n    onAddTag(addTagForm) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var _a;\n\n        const tag = (_a = addTagForm.form.get('tag_name')) === null || _a === void 0 ? void 0 : _a.value;\n        let newTag = {\n          id: 0,\n          tag: tag,\n          tickets: []\n        };\n\n        _this2.tagService.addTag(newTag).subscribe(response => {\n          //alert(\"Tag Added\")\n          Notifications.addNewAlert(\"New Tag Created with Name: \" + response.tag, \"success\");\n\n          _this2.tags.push(response);\n        }, error => {\n          alert(error.message);\n        });\n      })();\n    }\n\n  }\n\n  TagsComponent.ɵfac = function TagsComponent_Factory(t) {\n    return new (t || TagsComponent)(i0.ɵɵdirectiveInject(i1.TagService));\n  };\n\n  TagsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TagsComponent,\n    selectors: [[\"app-tags\"]],\n    decls: 22,\n    vars: 2,\n    consts: [[1, \"content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"id\", \"addTagDropDown\", \"ngbDropdownToggle\", \"\", \"rel\", \"tooltip\", \"title\", \"Add New Tag\", 1, \"btn\", \"btn-primary\", \"btn-link\", \"btn-outline-primary\"], [1, \"material-icons\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownFormTag\"], [1, \"px-4\", \"py-3\", 3, \"ngSubmit\"], [\"addTagForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"assignUserDropdownFormUsername\"], [\"ngModel\", \"\", \"name\", \"tag_name\", \"required\", \"\", \"type\", \"text\", \"placeholder\", \"Tag Name...\", 1, \"form-control\"], [\"input\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"col-md-4 col-sm-2\", 3, \"tag\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\", \"col-sm-2\", 3, \"tag\"]],\n    template: function TagsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵtext(6, \" Add New Tag \");\n        i0.ɵɵelementStart(7, \"i\", 6);\n        i0.ɵɵtext(8, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function TagsComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          return ctx.onAddTag(_r0);\n        });\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"label\", 11);\n        i0.ɵɵtext(14, \"New Tag Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 12, 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 14);\n        i0.ɵɵtext(18, \"Add Tag\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵtemplate(20, TagsComponent_app_tag_card_20_Template, 1, 1, \"app-tag-card\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(11);\n\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n      }\n    },\n    directives: [i2.NgbDropdown, i2.NgbDropdownToggle, i2.NgbDropdownMenu, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.RequiredValidator, i4.NgForOf, i5.TagCardComponent],\n    styles: [\"\"]\n  });\n  return TagsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}