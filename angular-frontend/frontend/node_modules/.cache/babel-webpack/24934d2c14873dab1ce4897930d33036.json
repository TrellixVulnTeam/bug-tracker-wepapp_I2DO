{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UserProfileComponent = class UserProfileComponent {\n  constructor(userService) {\n    this.userService = userService;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const username = localStorage.getItem(\"username\");\n      if (username) _this.user = yield _this.userService.getUserByName(username).toPromise();\n    })();\n  }\n\n  onUpdateUser(updateUserForm) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      const username = (_a = updateUserForm.form.get('user_username')) === null || _a === void 0 ? void 0 : _a.value;\n      const userEmail = (_b = updateUserForm.form.get('user_email')) === null || _b === void 0 ? void 0 : _b.value;\n      const userPhone = (_c = updateUserForm.form.get('user_phone')) === null || _c === void 0 ? void 0 : _c.value;\n      _this2.user = {\n        userName: username,\n        userEmail: userEmail,\n        userPhoneNo: userPhone,\n        id: _this2.user.id,\n        password: _this2.user.password\n      };\n\n      _this2.userService.updateUser(_this2.user).subscribe(response => {\n        alert(\"Updated\");\n        localStorage.setItem(\"username\", response.userName);\n      }, error => {\n        alert(\"Username already exists\");\n        alert(error.message);\n      });\n    })();\n  }\n\n};\nUserProfileComponent = __decorate([Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})], UserProfileComponent);\nexport { UserProfileComponent };","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/user-profile/user-profile.component.ts"],"names":[],"mappings":";;AACA,SAAS,SAAT,QAAkC,eAAlC;AAUA,IAAa,oBAAoB,GAAjC,MAAa,oBAAb,CAAiC;AAK/B,EAAA,WAAA,CAAmB,WAAnB,EAAiD;AAA9B,SAAA,WAAA,GAAA,WAAA;AAAmC;;AAEhD,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,YAAM,QAAQ,GAAG,YAAY,CAAC,OAAb,CAAqB,UAArB,CAAjB;AACA,UAAG,QAAH,EACA,KAAI,CAAC,IAAL,SAAkB,KAAI,CAAC,WAAL,CAAiB,aAAjB,CAA+B,QAA/B,EAAyC,SAAzC,EAAlB;AAHY;AAIb;;AAEY,EAAA,YAAY,CAAC,cAAD,EAAuB;AAAA;;AAAA;;;AAC9C,YAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,IAAf,CAAoB,GAApB,CAAwB,eAAxB,CAAA,MAAwC,IAAxC,IAAwC,EAAA,KAAA,KAAA,CAAxC,GAAwC,KAAA,CAAxC,GAAwC,EAAA,CAAE,KAA3D;AACA,YAAM,SAAS,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,IAAf,CAAoB,GAApB,CAAwB,YAAxB,CAAA,MAAqC,IAArC,IAAqC,EAAA,KAAA,KAAA,CAArC,GAAqC,KAAA,CAArC,GAAqC,EAAA,CAAE,KAAzD;AACA,YAAM,SAAS,GAAG,CAAA,EAAA,GAAA,cAAc,CAAC,IAAf,CAAoB,GAApB,CAAwB,YAAxB,CAAA,MAAqC,IAArC,IAAqC,EAAA,KAAA,KAAA,CAArC,GAAqC,KAAA,CAArC,GAAqC,EAAA,CAAE,KAAzD;AAEA,MAAA,MAAI,CAAC,IAAL,GAAY;AACV,QAAA,QAAQ,EAAC,QADC;AAEV,QAAA,SAAS,EAAC,SAFA;AAGV,QAAA,WAAW,EAAE,SAHH;AAIV,QAAA,EAAE,EAAC,MAAI,CAAC,IAAL,CAAU,EAJH;AAKV,QAAA,QAAQ,EAAC,MAAI,CAAC,IAAL,CAAU;AALT,OAAZ;;AAOA,MAAA,MAAI,CAAC,WAAL,CAAiB,UAAjB,CAA4B,MAAI,CAAC,IAAjC,EAAuC,SAAvC,CACG,QAAD,IAAkB;AAChB,QAAA,KAAK,CAAC,SAAD,CAAL;AACA,QAAA,YAAY,CAAC,OAAb,CAAqB,UAArB,EAAgC,QAAQ,CAAC,QAAzC;AACD,OAJH,EAKG,KAAD,IAA6B;AAC3B,QAAA,KAAK,CAAC,yBAAD,CAAL;AACA,QAAA,KAAK,CAAC,KAAK,CAAC,OAAP,CAAL;AACD,OARH;AAZ8C;AAyB/C;;AAtC8B,CAAjC;AAAa,oBAAoB,GAAA,UAAA,CAAA,CALhC,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,kBADD;AAET,EAAA,WAAW,EAAE,+BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,8BAAD;AAHF,CAAD,CAKuB,CAAA,EAApB,oBAAoB,CAApB;SAAA,oB","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { User } from 'src/app/interfaces/user';\nimport { UserServiceService } from 'src/app/services/user/user-service.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n\n  user!: User;\n\n  constructor(public userService:UserServiceService) { }\n\n  async ngOnInit(): Promise<void> {\n    const username = localStorage.getItem(\"username\");\n    if(username)\n    this.user = await this.userService.getUserByName(username).toPromise();\n  }\n\n  public async onUpdateUser(updateUserForm: NgForm):Promise<void>{\n    const username = updateUserForm.form.get('user_username')?.value;\n    const userEmail = updateUserForm.form.get('user_email')?.value;\n    const userPhone = updateUserForm.form.get('user_phone')?.value;\n\n    this.user = {\n      userName:username,\n      userEmail:userEmail,\n      userPhoneNo: userPhone,\n      id:this.user.id,\n      password:this.user.password\n    }\n    this.userService.updateUser(this.user).subscribe(\n      (response: User)=>  {\n        alert(\"Updated\")\n        localStorage.setItem(\"username\",response.userName);\n      },\n      (error: HttpErrorResponse) =>{\n        alert(\"Username already exists\");\n        alert(error.message);\n      }    \n    )\n\n\n\n  }\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}