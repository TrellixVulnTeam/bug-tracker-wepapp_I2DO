{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashBoardComponent = class DashBoardComponent {\n  constructor(ticketService, projectService) {\n    this.ticketService = ticketService;\n    this.projectService = projectService;\n    this.view = [400, 200];\n    this.showLegend = false;\n    this.showLabels = true;\n    this.doughnut = true;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.ticketsByPriority = yield _this.ticketService.getTicketsCountByPriority().toPromise();\n      _this.projectsByPriority = yield _this.projectService.getProjectsCountByPriority().toPromise();\n      _this.projectsByActiveTickets = yield _this.projectService.getActiveTicketsCountForAllProjects().toPromise();\n      _this.allAndFinishedTickets = yield _this.ticketService.getTicketsCountAllAndFnished().toPromise();\n      _this.allProjectCount = yield _this.projectService.getAllProjectsCount().toPromise();\n      const userId = localStorage.getItem(\"user_id\");\n      if (userId) _this.userAssignedAndCreatedTicketsCount = yield _this.ticketService.getUserAssignedAndCreatedTicketsCount(Number(userId)).toPromise();\n    })();\n  }\n\n};\nDashBoardComponent = __decorate([Component({\n  selector: 'app-dash-board',\n  templateUrl: './dash-board.component.html',\n  styleUrls: ['./dash-board.component.css']\n})], DashBoardComponent);\nexport { DashBoardComponent };","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/dash-board/dash-board.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AAWA,IAAa,kBAAkB,GAA/B,MAAa,kBAAb,CAA+B;AAe7B,EAAA,WAAA,CAAoB,aAApB,EAAyD,cAAzD,EAAsF;AAAlE,SAAA,aAAA,GAAA,aAAA;AAAqC,SAAA,cAAA,GAAA,cAAA;AAbzD,SAAA,IAAA,GAAwB,CAAC,GAAD,EAAM,GAAN,CAAxB;AACA,SAAA,UAAA,GAAa,KAAb;AACA,SAAA,UAAA,GAAa,IAAb;AACA,SAAA,QAAA,GAAW,IAAX;AAU2F;;AAErF,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,KAAI,CAAC,iBAAL,SAA+B,KAAI,CAAC,aAAL,CAAmB,yBAAnB,GAA+C,SAA/C,EAA/B;AACA,MAAA,KAAI,CAAC,kBAAL,SAAgC,KAAI,CAAC,cAAL,CAAoB,0BAApB,GAAiD,SAAjD,EAAhC;AACA,MAAA,KAAI,CAAC,uBAAL,SAAqC,KAAI,CAAC,cAAL,CAAoB,mCAApB,GAA0D,SAA1D,EAArC;AACA,MAAA,KAAI,CAAC,qBAAL,SAAmC,KAAI,CAAC,aAAL,CAAmB,4BAAnB,GAAkD,SAAlD,EAAnC;AACA,MAAA,KAAI,CAAC,eAAL,SAA6B,KAAI,CAAC,cAAL,CAAoB,mBAApB,GAA0C,SAA1C,EAA7B;AACA,YAAM,MAAM,GAAG,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAf;AACA,UAAG,MAAH,EACA,KAAI,CAAC,kCAAL,SAAgD,KAAI,CAAC,aAAL,CAAmB,qCAAnB,CAAyD,MAAM,CAAC,MAAD,CAA/D,EAAyE,SAAzE,EAAhD;AARY;AASb;;AA1B4B,CAA/B;AAAa,kBAAkB,GAAA,UAAA,CAAA,CAL9B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,gBADD;AAET,EAAA,WAAW,EAAE,6BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,4BAAD;AAHF,CAAD,CAKqB,CAAA,EAAlB,kBAAkB,CAAlB;SAAA,kB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BarchartItem } from 'src/app/interfaces/statInterfaces/barchart-items';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { TicketService } from 'src/app/services/ticket/ticket.service';\n\n@Component({\n  selector: 'app-dash-board',\n  templateUrl: './dash-board.component.html',\n  styleUrls: ['./dash-board.component.css']\n})\nexport class DashBoardComponent implements OnInit {\n\n  view: [number,number] = [400, 200];\n  showLegend = false;\n  showLabels = true;\n  doughnut = true;\n\n  ticketsByPriority!: BarchartItem[];\n  projectsByPriority!: BarchartItem[];\n  projectsByActiveTickets!: BarchartItem[];\n  //projects by active tickets count\n  allAndFinishedTickets!: number[];\n  userAssignedAndCreatedTicketsCount!: number[];\n  allProjectCount!: number;\n\n  constructor(private ticketService:TicketService, private projectService:ProjectService) { }\n \n  async ngOnInit(): Promise<void> {\n    this.ticketsByPriority = await this.ticketService.getTicketsCountByPriority().toPromise();\n    this.projectsByPriority = await this.projectService.getProjectsCountByPriority().toPromise();\n    this.projectsByActiveTickets = await this.projectService.getActiveTicketsCountForAllProjects().toPromise();\n    this.allAndFinishedTickets = await this.ticketService.getTicketsCountAllAndFnished().toPromise();\n    this.allProjectCount = await this.projectService.getAllProjectsCount().toPromise();\n    const userId = localStorage.getItem(\"user_id\");\n    if(userId)\n    this.userAssignedAndCreatedTicketsCount = await this.ticketService.getUserAssignedAndCreatedTicketsCount(Number(userId)).toPromise();\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}