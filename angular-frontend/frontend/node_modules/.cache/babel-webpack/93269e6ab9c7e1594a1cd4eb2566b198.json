{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProjectService = /*#__PURE__*/(() => {\n  class ProjectService {\n    constructor(http) {\n      this.http = http;\n      this.apiServerUrl = environment.apiBaseUrl;\n    }\n\n    getProjects(pageNo, sortBy, userId, status, priority) {\n      let params = new HttpParams().set(\"pageNo\", pageNo).set(\"sortBy\", sortBy).set(\"userId\", userId).set(\"status\", status).set(\"priority\", priority);\n      return this.http.get(`${this.apiServerUrl}/api/projects`, {\n        params: params\n      });\n    }\n\n    getProjectStats(projectId) {\n      const userId = localStorage.getItem(\"user_id\");\n      return this.http.get(`${this.apiServerUrl}/api/projects/${projectId}/stats/${userId}`);\n    }\n\n    addUserToProject(userId, projectId, roleId) {\n      //const userId= localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"userId\", userId).set(\"roleId\", roleId);\n      return this.http.post(`${this.apiServerUrl}/api/projects/${projectId}/user`, {\n        body: ''\n      }, {\n        params: params\n      });\n    }\n\n    getProjectNoOfUsers(projectId) {\n      return this.http.get(`${this.apiServerUrl}/api/projects/${projectId}/users/count`);\n    }\n\n    getUserStatsForProject(projectId, userId) {\n      return this.http.get(`${this.apiServerUrl}/api/projects/${projectId}/users/${userId}/stats`);\n    }\n\n    getUserProjectLink(projectId, userId) {\n      return this.http.get(`${this.apiServerUrl}/api/projects/${projectId}/users/${userId}/link`);\n    }\n\n    updateProject(projectId, priorityId, newProject) {\n      let params = new HttpParams().set(\"priorityId\", priorityId);\n      let header = new HttpHeaders().set('content-type', 'application/json');\n      let body = JSON.stringify(newProject);\n      return this.http.patch(`${this.apiServerUrl}/api/projects/${projectId}`, body, {\n        params: params,\n        headers: header\n      });\n    }\n\n    addProject(priorityId, newProject, userId, roleId) {\n      //const userId= localStorage.getItem(\"user_id\");\n      let params = new HttpParams().set(\"priorityId\", priorityId).set(\"userId\", userId).set(\"roleId\", roleId);\n      let header = new HttpHeaders().set('content-type', 'application/json');\n      let body = JSON.stringify(newProject);\n      return this.http.post(`${this.apiServerUrl}/api/projects/`, body, {\n        params: params,\n        headers: header\n      });\n    }\n\n    getProjectsCountByPriority() {\n      return this.http.get(`${this.apiServerUrl}/api/projects/priority/count`);\n    }\n\n    getActiveTicketsCountForAllProjects() {\n      return this.http.get(`${this.apiServerUrl}/api/projects/tickets/count`);\n    }\n\n    getAllProjectsCount() {\n      return this.http.get(`${this.apiServerUrl}/api/projects/count`);\n    }\n\n  }\n\n  ProjectService.ɵfac = function ProjectService_Factory(t) {\n    return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProjectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectService,\n    factory: ProjectService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProjectService;\n})();","map":null,"metadata":{},"sourceType":"module"}