{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/role/role.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./role-card/role-card.component\";\n\nfunction RolesComponent_app_role_card_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-role-card\", 18);\n  }\n\n  if (rf & 2) {\n    const role_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"role\", role_r3);\n  }\n}\n\nexport class RolesComponent {\n  constructor(roleService) {\n    this.roleService = roleService;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.roles = yield _this.roleService.getRoles().toPromise();\n    })();\n  }\n\n  onRoleClick(accessLevel, addRoleForm) {\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const roleName = (_a = addRoleForm.form.get('role_name')) === null || _a === void 0 ? void 0 : _a.value;\n      alert(`access level: ${accessLevel} and roleName: ${roleName}`);\n    })();\n  }\n\n}\n\nRolesComponent.ɵfac = function RolesComponent_Factory(t) {\n  return new (t || RolesComponent)(i0.ɵɵdirectiveInject(i1.RoleService));\n};\n\nRolesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RolesComponent,\n  selectors: [[\"app-roles\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-2\"], [\"ngbDropdown\", \"\", 1, \"d-inline-block\"], [\"id\", \"addTagDropDown\", \"ngbDropdownToggle\", \"\", \"rel\", \"tooltip\", \"title\", \"Assign User To Ticket\", 1, \"btn\", \"btn-info\", \"btn-link\", \"btn-outline-info\"], [1, \"material-icons\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"dropdownFormTag\"], [1, \"px-4\", \"py-3\"], [\"addRoleForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"assignUserDropdownFormUsername\"], [\"ngModel\", \"\", \"name\", \"role_name\", \"required\", \"\", \"type\", \"text\", \"placeholder\", \"Role Name...\", 1, \"form-control\"], [\"input\", \"\"], [\"id\", \"priorityDropDown\", \"ngbDropdownToggle\", \"\", \"type\", \"button\", 1, \"btn\", \"btn-outline-info\"], [\"ngbDropdownMenu\", \"\", \"aria-labelledby\", \"priorityDropDown\"], [\"ngbDropdownItem\", \"\", 3, \"click\"], [\"class\", \" col-md-3 col-sm-2\", 3, \"role\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\", \"col-sm-2\", 3, \"role\"]],\n  template: function RolesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"button\", 5);\n      i0.ɵɵtext(6, \" Add New Role \");\n      i0.ɵɵelementStart(7, \"i\", 6);\n      i0.ɵɵtext(8, \"add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵelementStart(10, \"form\", 8, 9);\n      i0.ɵɵelementStart(12, \"div\", 10);\n      i0.ɵɵelementStart(13, \"label\", 11);\n      i0.ɵɵtext(14, \"New Role Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 12, 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 10);\n      i0.ɵɵelementStart(18, \"div\", 4);\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵtext(20, \" Role \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 15);\n      i0.ɵɵelementStart(22, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function RolesComponent_Template_button_click_22_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r0 = i0.ɵɵreference(11);\n\n        return ctx.onRoleClick(1, _r0);\n      });\n      i0.ɵɵtext(23, \"Read\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function RolesComponent_Template_button_click_24_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r0 = i0.ɵɵreference(11);\n\n        return ctx.onRoleClick(2, _r0);\n      });\n      i0.ɵɵtext(25, \"Read & Write\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function RolesComponent_Template_button_click_26_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        const _r0 = i0.ɵɵreference(11);\n\n        return ctx.onRoleClick(3, _r0);\n      });\n      i0.ɵɵtext(27, \"Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 2);\n      i0.ɵɵtemplate(29, RolesComponent_app_role_card_29_Template, 1, 1, \"app-role-card\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n    }\n  },\n  directives: [i2.NgbDropdown, i2.NgbDropdownToggle, i2.NgbDropdownMenu, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.RequiredValidator, i2.NgbDropdownItem, i4.NgForOf, i5.RoleCardComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb2xlcy5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/roles/roles.component.ts","/home/geri/Documents/angular-frontend/frontend/src/app/components/roles/roles.component.html"],"names":[],"mappings":";;;;;;;;;;AC2CU,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA,EAAA,EAAA;;;;;AAAqE,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA;;;;ADjC/E,OAAM,MAAO,cAAP,CAAqB;AAIzB,EAAA,WAAA,CAAmB,WAAnB,EAA0C;AAAvB,SAAA,WAAA,GAAA,WAAA;AAA4B;;AAEzC,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,KAAI,CAAC,KAAL,SAAmB,KAAI,CAAC,WAAL,CAAiB,QAAjB,GAA4B,SAA5B,EAAnB;AADY;AAEb;;AAEY,EAAA,WAAW,CAAC,WAAD,EAAoB,WAApB,EAAuC;AAAA;;;AAC7D,YAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,WAAW,CAAC,IAAZ,CAAiB,GAAjB,CAAqB,WAArB,CAAA,MAAiC,IAAjC,IAAiC,EAAA,KAAA,KAAA,CAAjC,GAAiC,KAAA,CAAjC,GAAiC,EAAA,CAAE,KAApD;AACA,MAAA,KAAK,CAAC,iBAAiB,WAAW,kBAAkB,QAAQ,EAAvD,CAAL;AAF6D;AAK9D;;AAfwB;;;mBAAd,c,EAAc,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C;AAAA,C;;;QAAd,c;AAAc,EAAA,SAAA,EAAA,CAAA,CAAA,WAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,SAAA,EAAA,OAAA,EAAA,uBAAA,EAAA,CAAA,EAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,iBAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,MAAA,CAAA,EAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA,CAAA,KAAA,EAAA,gCAAA,CAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,MAAA,EAAA,WAAA,EAAA,UAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,aAAA,EAAA,cAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,CAAA,EAAA,KAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,iBAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,UAAA,EAAA,CAAA,EAAA,MAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,uBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;;;ACV3B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAGE,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,gBAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AAA0B,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,KAAA;AAAG,MAAA,EAAA,CAAA,YAAA;AAC/B,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AAA4C,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,eAAA;AAAa,MAAA,EAAA,CAAA,YAAA;AACzD,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AAEE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAME,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA;AAAA,QAAA,EAAA,CAAA,aAAA,CAAA,GAAA;;AAAA,cAAA,GAAA,GAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA;;AAAA,eAAS,GAAA,CAAA,WAAA,CAAY,CAAZ,EAAa,GAAb,CAAT;AAAmC,OAAnC;AAAqC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AACjE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA;AAAA,QAAA,EAAA,CAAA,aAAA,CAAA,GAAA;;AAAA,cAAA,GAAA,GAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA;;AAAA,eAAS,GAAA,CAAA,WAAA,CAAY,CAAZ,EAAa,GAAb,CAAT;AAAmC,OAAnC;AAAqC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA;AAAY,MAAA,EAAA,CAAA,YAAA;AACzE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAAwB,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gDAAA,GAAA;AAAA,QAAA,EAAA,CAAA,aAAA,CAAA,GAAA;;AAAA,cAAA,GAAA,GAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA;;AAAA,eAAS,GAAA,CAAA,WAAA,CAAY,CAAZ,EAAa,GAAb,CAAT;AAAmC,OAAnC;AAAqC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA;AAAK,MAAA,EAAA,CAAA,YAAA;AACpE,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AAEF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AAEI,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,wCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA;AAEJ,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AAEF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;;;;AANmE,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,KAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Role } from 'src/app/interfaces/role';\nimport { RoleService } from 'src/app/services/role/role.service';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n\n  roles!: Role[];\n\n  constructor(public roleService:RoleService) { }\n\n  async ngOnInit(): Promise<void> {\n    this.roles = await this.roleService.getRoles().toPromise();\n  }\n\n  public async onRoleClick(accessLevel:number,addRoleForm: NgForm):Promise<void>{\n    const roleName = addRoleForm.form.get('role_name')?.value;\n    alert(`access level: ${accessLevel} and roleName: ${roleName}`);\n\n    \n  }\n\n}\n","<div class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-2\">\n          <div ngbDropdown class=\"d-inline-block\">\n            <button class=\"btn btn-info btn-link btn-outline-info\" id=\"addTagDropDown\" ngbDropdownToggle\n            rel=\"tooltip\"\n              title=\"Assign User To Ticket\">\n              Add New Role\n              <i class=\"material-icons\">add</i>\n            </button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownFormTag\">\n              <form class=\"px-4 py-3\"  #addRoleForm=\"ngForm\">\n                <div class=\"form-group\">\n                  <label for=\"assignUserDropdownFormUsername\">New Role Name</label>\n                  <input ngModel name=\"role_name\" #input required type=\"text\" class=\"form-control\" placeholder=\"Role Name...\" >\n                </div>\n                <div class=\"form-group\">\n                 \n                  <div ngbDropdown class=\"d-inline-block\">\n                    <button\n                      class=\"btn btn-outline-info \"\n                      id=\"priorityDropDown\"\n                      ngbDropdownToggle\n                      type=\"button\"\n                    >\n                      Role\n                    </button>\n                    <div ngbDropdownMenu aria-labelledby=\"priorityDropDown\">\n                      <button ngbDropdownItem (click)=\"onRoleClick(1,addRoleForm)\">Read</button>\n                      <button ngbDropdownItem (click)=\"onRoleClick(2,addRoleForm)\">Read & Write</button>\n                      <button ngbDropdownItem (click)=\"onRoleClick(3,addRoleForm)\">Owner</button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n             \n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n  \n          <app-role-card class=\" col-md-3 col-sm-2\" *ngFor=\"let role of roles\" [role]=\"role\"></app-role-card>\n  \n      </div>\n      <div class=\"row\">\n      </div>\n    </div>\n  </div>\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}