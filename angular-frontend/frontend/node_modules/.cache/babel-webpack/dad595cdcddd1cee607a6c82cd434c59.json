{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ticket/ticket.service\";\nimport * as i2 from \"src/app/services/project/project.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./cards/stat-card/stat-card.component\";\nimport * as i6 from \"./cards/graph-card/graph-card.component\";\nimport * as i7 from \"@swimlane/ngx-charts\";\nimport * as i8 from \"./mini-tickets-menu-card/mini-tickets-menu-card.component\";\n\nfunction DashBoardComponent_tr_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelementStart(10, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function DashBoardComponent_tr_37_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const ticket_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.openTicket(ticket_r1);\n    });\n    i0.ɵɵelementStart(11, \"i\", 19);\n    i0.ɵɵtext(12, \"visibility\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ticket_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticket_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticket_r1.ticketTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ticket_r1.submitUser.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.datepipe.transform(ticket_r1.deadline, \"yyyy-MM-dd\"));\n  }\n}\n\nexport class DashBoardComponent {\n  constructor(ticketService, projectService, router, datepipe) {\n    this.ticketService = ticketService;\n    this.projectService = projectService;\n    this.router = router;\n    this.datepipe = datepipe;\n    this.view = [400, 200];\n    this.showLegend = false;\n    this.showLabels = true;\n    this.doughnut = true;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.ticketsByPriority = yield _this.ticketService.getTicketsCountByPriority().toPromise();\n      _this.projectsByPriority = yield _this.projectService.getProjectsCountByPriority().toPromise();\n      _this.projectsByActiveTickets = yield _this.projectService.getActiveTicketsCountForAllProjects().toPromise();\n      _this.allAndFinishedTickets = yield _this.ticketService.getTicketsCountAllAndFnished().toPromise();\n      _this.allProjectCount = yield _this.projectService.getAllProjectsCount().toPromise();\n      const userId = localStorage.getItem(\"user_id\");\n      if (userId) _this.userAssignedAndCreatedTicketsCount = yield _this.ticketService.getUserAssignedAndCreatedTicketsCount(Number(userId)).toPromise();\n      _this.tickets = yield _this.ticketService.getTicketsOfProjectsWithUser(0, \"created\", \"all\", 0).toPromise();\n    })();\n  }\n\n  openTicket(ticket) {\n    this.router.navigateByUrl('tickets/ticket', {\n      state: {\n        ticket: ticket\n      }\n    });\n  }\n\n}\n\nDashBoardComponent.ɵfac = function DashBoardComponent_Factory(t) {\n  return new (t || DashBoardComponent)(i0.ɵɵdirectiveInject(i1.TicketService), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.DatePipe));\n};\n\nDashBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashBoardComponent,\n  selectors: [[\"app-dash-board\"]],\n  decls: 38,\n  vars: 22,\n  consts: [[1, \"content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-lg-3\", \"col-md-6\", \"col-sm-6\", 3, \"cardIcon\", \"cardCategory\", \"cardTitle\"], [1, \"col-md-4\", 3, \"items\", \"cardTitle\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-header\", \"card-header-success\"], [1, \"areachart-wrapper\"], [3, \"view\", \"results\", \"legend\", \"labels\", \"doughnut\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"col-lg-6\", \"col-md-12\"], [1, \"card-header\", \"card-header-warning\"], [1, \"card-body\", \"table-responsive\"], [1, \"table\", \"table-hover\"], [1, \"text-warning\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"rel\", \"tooltip\", \"title\", \"View ticket\", 1, \"btn\", \"btn-primary\", \"btn-link\", \"btn-sm\", 3, \"click\"], [1, \"material-icons\"]],\n  template: function DashBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-stat-card\", 3);\n      i0.ɵɵelement(4, \"app-stat-card\", 3);\n      i0.ɵɵelement(5, \"app-stat-card\", 3);\n      i0.ɵɵelement(6, \"app-stat-card\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2);\n      i0.ɵɵelement(8, \"app-graph-card\", 4);\n      i0.ɵɵelement(9, \"app-graph-card\", 4);\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵelementStart(11, \"div\", 6);\n      i0.ɵɵelementStart(12, \"div\", 7);\n      i0.ɵɵelementStart(13, \"div\", 8);\n      i0.ɵɵelement(14, \"ngx-charts-pie-chart\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 10);\n      i0.ɵɵelementStart(16, \"h4\", 11);\n      i0.ɵɵtext(17, \"Projects By Open Tickets\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 2);\n      i0.ɵɵelement(19, \"app-mini-tickets-menu-card\", 12);\n      i0.ɵɵelementStart(20, \"div\", 12);\n      i0.ɵɵelementStart(21, \"div\", 6);\n      i0.ɵɵelementStart(22, \"div\", 13);\n      i0.ɵɵelementStart(23, \"h4\", 11);\n      i0.ɵɵtext(24, \"Newest Tickets\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 14);\n      i0.ɵɵelementStart(26, \"table\", 15);\n      i0.ɵɵelementStart(27, \"thead\", 16);\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\");\n      i0.ɵɵtext(31, \"Ticket Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"th\");\n      i0.ɵɵtext(33, \"Made By\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"th\");\n      i0.ɵɵtext(35, \"Created\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"tbody\");\n      i0.ɵɵtemplate(37, DashBoardComponent_tr_37_Template, 13, 4, \"tr\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"cardIcon\", \"view_list\")(\"cardCategory\", \"All Projects Count\")(\"cardTitle\", ctx.allProjectCount.toString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"cardIcon\", \"task\")(\"cardCategory\", \"Complete/All Tickets\")(\"cardTitle\", ctx.allAndFinishedTickets[1] + \" / \" + ctx.allAndFinishedTickets[0]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"cardIcon\", \"add\")(\"cardCategory\", \"You assigned tickets Count\")(\"cardTitle\", ctx.userAssignedAndCreatedTicketsCount[0].toString());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"cardIcon\", \"add\")(\"cardCategory\", \"Your Created Tickets Count\")(\"cardTitle\", ctx.userAssignedAndCreatedTicketsCount[1].toString());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"items\", ctx.ticketsByPriority)(\"cardTitle\", \"Tickets By Priority Level\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"items\", ctx.projectsByPriority)(\"cardTitle\", \"Projects By Priority Level\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"view\", ctx.view)(\"results\", ctx.projectsByActiveTickets)(\"legend\", ctx.showLegend)(\"labels\", ctx.showLabels)(\"doughnut\", ctx.doughnut);\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tickets);\n    }\n  },\n  directives: [i5.StatCardComponent, i6.GraphCardComponent, i7.PieChartComponent, i8.MiniTicketsMenuCardComponent, i4.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoLWJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/dash-board/dash-board.component.ts","/home/geri/Documents/angular-frontend/frontend/src/app/components/dash-board/dash-board.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;ACiDgB,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AAAI,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAa,IAAA,EAAA,CAAA,YAAA;AACjB,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AAAI,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAsB,IAAA,EAAA,CAAA,YAAA;AAC1B,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AAAI,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAA8B,IAAA,EAAA,CAAA,YAAA;AAClC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AAAI,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAA4D,IAAA,EAAA,CAAA,YAAA;AAChE,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAKA,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,0DAAA,GAAA;AAAA,YAAA,WAAA,GAAA,EAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AAAA,YAAA,SAAA,GAAA,WAAA,CAAA,SAAA;AAAA,YAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA;AAAA,aAAA,MAAA,CAAA,UAAA,CAAA,SAAA,CAAA;AAAA,KAAA;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA;AAA0B,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,YAAA;AAAU,IAAA,EAAA,CAAA,YAAA;AACtC,IAAA,EAAA,CAAA,YAAA;AACA,IAAA,EAAA,CAAA,YAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;;AAfM,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,EAAA;AACA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,WAAA;AACA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,SAAA,CAAA,UAAA,CAAA,QAAA;AACA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,QAAA,EAAA,YAAA,CAAA;;;;ADxCtB,OAAM,MAAO,kBAAP,CAAyB;AAiB7B,EAAA,WAAA,CAAoB,aAApB,EAAyD,cAAzD,EAAgG,MAAhG,EAAqH,QAArH,EAAuI;AAAnH,SAAA,aAAA,GAAA,aAAA;AAAqC,SAAA,cAAA,GAAA,cAAA;AAAuC,SAAA,MAAA,GAAA,MAAA;AAAqB,SAAA,QAAA,GAAA,QAAA;AAfrH,SAAA,IAAA,GAAwB,CAAC,GAAD,EAAM,GAAN,CAAxB;AACA,SAAA,UAAA,GAAa,KAAb;AACA,SAAA,UAAA,GAAa,IAAb;AACA,SAAA,QAAA,GAAW,IAAX;AAY4I;;AAEtI,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,MAAA,KAAI,CAAC,iBAAL,SAA+B,KAAI,CAAC,aAAL,CAAmB,yBAAnB,GAA+C,SAA/C,EAA/B;AACA,MAAA,KAAI,CAAC,kBAAL,SAAgC,KAAI,CAAC,cAAL,CAAoB,0BAApB,GAAiD,SAAjD,EAAhC;AACA,MAAA,KAAI,CAAC,uBAAL,SAAqC,KAAI,CAAC,cAAL,CAAoB,mCAApB,GAA0D,SAA1D,EAArC;AACA,MAAA,KAAI,CAAC,qBAAL,SAAmC,KAAI,CAAC,aAAL,CAAmB,4BAAnB,GAAkD,SAAlD,EAAnC;AACA,MAAA,KAAI,CAAC,eAAL,SAA6B,KAAI,CAAC,cAAL,CAAoB,mBAApB,GAA0C,SAA1C,EAA7B;AACA,YAAM,MAAM,GAAG,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAf;AACA,UAAG,MAAH,EACA,KAAI,CAAC,kCAAL,SAAgD,KAAI,CAAC,aAAL,CAAmB,qCAAnB,CAAyD,MAAM,CAAC,MAAD,CAA/D,EAAyE,SAAzE,EAAhD;AACA,MAAA,KAAI,CAAC,OAAL,SAAqB,KAAI,CAAC,aAAL,CAAmB,4BAAnB,CAAgD,CAAhD,EAAkD,SAAlD,EAA4D,KAA5D,EAAkE,CAAlE,EAAqE,SAArE,EAArB;AATY;AAUb;;AACM,EAAA,UAAU,CAAC,MAAD,EAAc;AAC7B,SAAK,MAAL,CAAY,aAAZ,CAA0B,gBAA1B,EAA4C;AAAE,MAAA,KAAK,EAAE;AAAE,QAAA,MAAM,EAAE;AAAV;AAAT,KAA5C;AAED;;AAjC4B;;;mBAAlB,kB,EAAkB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,QAAA,C;AAAA,C;;;QAAlB,kB;AAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,CAAA,EAAA,UAAA,EAAA,cAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,OAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,SAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA,EAAA,KAAA,EAAA,aAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACZ/B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA,EAAA,CAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,sBAAA,EAAA,CAAA;AAOF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA;AAAuB,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,0BAAA;AAAwB,MAAA,EAAA,CAAA,YAAA;AACjD,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,4BAAA,EAAA,EAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA;AAAuB,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gBAAA;AAAc,MAAA,EAAA,CAAA,YAAA;AACvC,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA;AAAI,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA;AAAE,MAAA,EAAA,CAAA,YAAA;AACN,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA;AAAI,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,cAAA;AAAY,MAAA,EAAA,CAAA,YAAA;AAChB,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA;AAAI,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,SAAA;AAAO,MAAA,EAAA,CAAA,YAAA;AACX,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA;AAAI,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,SAAA;AAAO,MAAA,EAAA,CAAA,YAAA;AACb,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,OAAA;AACE,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,iCAAA,EAAA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA;AAiBF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;;;;AArEwD,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,WAAA,EAAwB,cAAxB,EAAwB,oBAAxB,EAAwB,WAAxB,EAAwB,GAAA,CAAA,eAAA,CAAA,QAAA,EAAxB;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,MAAA,EAAmB,cAAnB,EAAmB,sBAAnB,EAAmB,WAAnB,EAAmB,GAAA,CAAA,qBAAA,CAAA,CAAA,IAAA,KAAA,GAAA,GAAA,CAAA,qBAAA,CAAA,CAAA,CAAnB;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,KAAA,EAAkB,cAAlB,EAAkB,4BAAlB,EAAkB,WAAlB,EAAkB,GAAA,CAAA,kCAAA,CAAA,CAAA,EAAA,QAAA,EAAlB;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,KAAA,EAAkB,cAAlB,EAAkB,4BAAlB,EAAkB,WAAlB,EAAkB,GAAA,CAAA,kCAAA,CAAA,CAAA,EAAA,QAAA,EAAlB;AAGjB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA,iBAAA,EAA2B,WAA3B,EAA2B,2BAA3B;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA,kBAAA,EAA4B,WAA5B,EAA4B,4BAA5B;AAMzB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,EAAa,SAAb,EAAa,GAAA,CAAA,uBAAb,EAAa,QAAb,EAAa,GAAA,CAAA,UAAb,EAAa,QAAb,EAAa,GAAA,CAAA,UAAb,EAAa,UAAb,EAAa,GAAA,CAAA,QAAb;AAgCyB,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,OAAA","sourcesContent":["import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BarchartItem } from 'src/app/interfaces/statInterfaces/barchart-items';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { ProjectService } from 'src/app/services/project/project.service';\nimport { TicketService } from 'src/app/services/ticket/ticket.service';\n\n@Component({\n  selector: 'app-dash-board',\n  templateUrl: './dash-board.component.html',\n  styleUrls: ['./dash-board.component.css']\n})\nexport class DashBoardComponent implements OnInit {\n\n  view: [number,number] = [400, 200];\n  showLegend = false;\n  showLabels = true;\n  doughnut = true;\n\n  ticketsByPriority!: BarchartItem[];\n  projectsByPriority!: BarchartItem[];\n  projectsByActiveTickets!: BarchartItem[];\n  //projects by active tickets count\n  allAndFinishedTickets!: number[];\n  userAssignedAndCreatedTicketsCount!: number[];\n  allProjectCount!: number;\n\n  tickets!: Ticket[];\n\n  constructor(private ticketService:TicketService, private projectService:ProjectService, private router:Router,public datepipe: DatePipe) { }\n \n  async ngOnInit(): Promise<void> {\n    this.ticketsByPriority = await this.ticketService.getTicketsCountByPriority().toPromise();\n    this.projectsByPriority = await this.projectService.getProjectsCountByPriority().toPromise();\n    this.projectsByActiveTickets = await this.projectService.getActiveTicketsCountForAllProjects().toPromise();\n    this.allAndFinishedTickets = await this.ticketService.getTicketsCountAllAndFnished().toPromise();\n    this.allProjectCount = await this.projectService.getAllProjectsCount().toPromise();\n    const userId = localStorage.getItem(\"user_id\");\n    if(userId)\n    this.userAssignedAndCreatedTicketsCount = await this.ticketService.getUserAssignedAndCreatedTicketsCount(Number(userId)).toPromise();\n    this.tickets = await this.ticketService.getTicketsOfProjectsWithUser(0,\"created\",\"all\",0).toPromise();\n  }\n  public openTicket(ticket:Ticket){\n    this.router.navigateByUrl('tickets/ticket', { state: { ticket: ticket } });\n    \n  }\n\n}\n","\n<div class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <app-stat-card class=\"col-lg-3 col-md-6 col-sm-6\" [cardIcon]=\"'view_list'\" [cardCategory]=\"'All Projects Count'\" [cardTitle]=\"allProjectCount.toString()\"></app-stat-card>\n      <app-stat-card class=\"col-lg-3 col-md-6 col-sm-6\" [cardIcon]=\"'task'\" [cardCategory]=\"'Complete/All Tickets'\" [cardTitle]=\"allAndFinishedTickets[1]+' / '+allAndFinishedTickets[0]\"></app-stat-card>\n      <app-stat-card class=\"col-lg-3 col-md-6 col-sm-6\" [cardIcon]=\"'add'\" [cardCategory]=\"'You assigned tickets Count'\" [cardTitle]=\"userAssignedAndCreatedTicketsCount[0].toString()\"></app-stat-card>\n      <app-stat-card class=\"col-lg-3 col-md-6 col-sm-6\" [cardIcon]=\"'add'\" [cardCategory]=\"'Your Created Tickets Count'\" [cardTitle]=\"userAssignedAndCreatedTicketsCount[1].toString()\"></app-stat-card>\n    </div>\n    <div class=\"row\">\n      <app-graph-card class=\"col-md-4\" [items]=\"ticketsByPriority\" [cardTitle]=\"'Tickets By Priority Level'\"></app-graph-card>\n      <app-graph-card class=\"col-md-4\" [items]=\"projectsByPriority\" [cardTitle]=\"'Projects By Priority Level'\"></app-graph-card>\n      <div class=\"col-md-4\">\n        <div class=\"card\">\n          <div class=\"card-header card-header-success\">\n            <div class=\"areachart-wrapper \">\n              <ngx-charts-pie-chart\n              [view]=\"view\"\n              [results]=\"projectsByActiveTickets\"\n              [legend]=\"showLegend\"\n              [labels]=\"showLabels\"\n              [doughnut]=\"doughnut\">\n            </ngx-charts-pie-chart>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Projects By Open Tickets</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <app-mini-tickets-menu-card class=\"col-lg-6 col-md-12\"></app-mini-tickets-menu-card>\n\n      <div class=\"col-lg-6 col-md-12\">\n        <div class=\"card\">\n          <div class=\"card-header card-header-warning\">\n            <h4 class=\"card-title\">Newest Tickets</h4>\n          </div>\n          <div class=\"card-body table-responsive\">\n            <table class=\"table table-hover\">\n              <thead class=\"text-warning\">\n                <th>ID</th>\n                <th>Ticket Title</th>\n                <th>Made By</th>\n                <th>Created</th>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let ticket of tickets\">\n                  <td>{{ticket.id}}</td>\n                  <td>{{ticket.ticketTitle}}</td>\n                  <td>{{ticket.submitUser.userName}}</td>\n                  <td>{{ this.datepipe.transform(ticket.deadline, \"yyyy-MM-dd\") }}</td>\n                  <td>\n                    <button\n                    type=\"button\"\n                    rel=\"tooltip\"\n                    title=\"View ticket\"\n                    class=\"btn btn-primary btn-link btn-sm\"\n                    (click)=\"openTicket(ticket)\"\n                  >\n                    <i class=\"material-icons\">visibility</i>\n                  </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}