{"ast":null,"code":"import _asyncToGenerator from \"/home/geri/Documents/angular-frontend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LegendPosition } from '@swimlane/ngx-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ticket/ticket.service\";\nimport * as i2 from \"@swimlane/ngx-charts\";\nexport class GraphCardComponent {\n  constructor(ticketService) {\n    this.ticketService = ticketService;\n    this.view = [400, 200]; // options\n\n    this.showXAxis = false;\n    this.legendPosition = LegendPosition.Below;\n    this.showYAxis = true;\n    this.gradient = false;\n    this.showLegend = false;\n    this.showXAxisLabel = false;\n    this.showYAxisLabel = false;\n  }\n\n  ngOnInit() {\n    return _asyncToGenerator(function* () {})();\n  }\n\n  onSelect(event) {\n    console.log(event);\n  }\n\n}\n\nGraphCardComponent.ɵfac = function GraphCardComponent_Factory(t) {\n  return new (t || GraphCardComponent)(i0.ɵɵdirectiveInject(i1.TicketService));\n};\n\nGraphCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GraphCardComponent,\n  selectors: [[\"app-graph-card\"]],\n  inputs: {\n    items: \"items\",\n    cardTitle: \"cardTitle\"\n  },\n  decls: 7,\n  vars: 10,\n  consts: [[1, \"card\"], [1, \"card-header\", \"card-header-success\"], [1, \"areachart-wrapper\"], [3, \"view\", \"results\", \"gradient\", \"xAxis\", \"yAxis\", \"legend\", \"showXAxisLabel\", \"showYAxisLabel\", \"legendPosition\", \"select\"], [1, \"card-body\"], [1, \"card-title\"]],\n  template: function GraphCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"ngx-charts-bar-vertical\", 3);\n      i0.ɵɵlistener(\"select\", function GraphCardComponent_Template_ngx_charts_bar_vertical_select_3_listener($event) {\n        return ctx.onSelect($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"h4\", 5);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"view\", ctx.view)(\"results\", ctx.items)(\"gradient\", ctx.gradient)(\"xAxis\", ctx.showXAxis)(\"yAxis\", ctx.showYAxis)(\"legend\", ctx.showLegend)(\"showXAxisLabel\", ctx.showXAxisLabel)(\"showYAxisLabel\", ctx.showYAxisLabel)(\"legendPosition\", ctx.legendPosition);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.cardTitle);\n    }\n  },\n  directives: [i2.BarVerticalComponent],\n  styles: [\".ngx-charts text{fill:#fff!important}.dark[_ngcontent-%COMP%]{background:#1b1e27}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   text[_ngcontent-%COMP%]{fill:#a0aabe}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .tooltip-anchor[_ngcontent-%COMP%]{fill:#fff}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .gridline-path[_ngcontent-%COMP%]{stroke:#2f3646}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .refline-path[_ngcontent-%COMP%]{stroke:#455066}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .reference-area[_ngcontent-%COMP%]{fill:#fff}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .grid-panel.odd[_ngcontent-%COMP%]   rect[_ngcontent-%COMP%]{fill:#ffffff0d}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .force-directed-graph[_ngcontent-%COMP%]   .edge[_ngcontent-%COMP%]{stroke:#455066}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .number-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#f0f1f6}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .gauge[_ngcontent-%COMP%]   .background-arc[_ngcontent-%COMP%]   path[_ngcontent-%COMP%]{fill:#2f3646}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .gauge[_ngcontent-%COMP%]   .gauge-tick[_ngcontent-%COMP%]   path[_ngcontent-%COMP%]{stroke:#a0aabe}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .gauge[_ngcontent-%COMP%]   .gauge-tick[_ngcontent-%COMP%]   text[_ngcontent-%COMP%]{fill:#a0aabe}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .linear-gauge[_ngcontent-%COMP%]   .background-bar[_ngcontent-%COMP%]   path[_ngcontent-%COMP%]{fill:#2f3646}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .linear-gauge[_ngcontent-%COMP%]   .units[_ngcontent-%COMP%]{fill:#72809b}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .timeline[_ngcontent-%COMP%]   .brush-background[_ngcontent-%COMP%]{fill:#ffffff0d}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .timeline[_ngcontent-%COMP%]   .brush[_ngcontent-%COMP%]   .selection[_ngcontent-%COMP%]{fill:#ffffff1a;stroke:#aaa}.dark[_ngcontent-%COMP%]   .ngx-charts[_ngcontent-%COMP%]   .polar-chart[_ngcontent-%COMP%]   .polar-chart-background[_ngcontent-%COMP%]{fill:#1e222e}.dark[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .legend-labels[_ngcontent-%COMP%]{background:rgba(255,255,255,.05)!important}.dark[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .legend-item[_ngcontent-%COMP%]:hover{color:#fff}.dark[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .legend-label[_ngcontent-%COMP%]:hover{color:#fff!important}.dark[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .legend-label[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]   .legend-label-text[_ngcontent-%COMP%]{color:#fff!important}.dark[_ngcontent-%COMP%]   .chart-legend[_ngcontent-%COMP%]   .scale-legend-label[_ngcontent-%COMP%]{color:#a0aabe}.dark[_ngcontent-%COMP%]   .advanced-pie-legend[_ngcontent-%COMP%]{color:#a0aabe}.dark[_ngcontent-%COMP%]   .advanced-pie-legend[_ngcontent-%COMP%]   .legend-item[_ngcontent-%COMP%]:hover{color:#fff!important}.dark[_ngcontent-%COMP%]   .number-card[_ngcontent-%COMP%]   .number-card-label[_ngcontent-%COMP%]{font-size:.8em;color:#a0aabe}\"]\n});","map":{"version":3,"sources":["/home/geri/Documents/angular-frontend/frontend/src/app/components/dash-board/cards/graph-card/graph-card.component.ts","/home/geri/Documents/angular-frontend/frontend/src/app/components/dash-board/cards/graph-card/graph-card.component.html"],"names":[],"mappings":";AACA,SAA0B,cAA1B,QAAgD,sBAAhD;;;;AAUA,OAAM,MAAO,kBAAP,CAAyB;AAmB7B,EAAA,WAAA,CAAmB,aAAnB,EAA8C;AAA3B,SAAA,aAAA,GAAA,aAAA;AAdnB,SAAA,IAAA,GAAwB,CAAC,GAAD,EAAM,GAAN,CAAxB,CAc8C,CAT9C;;AACA,SAAA,SAAA,GAAY,KAAZ;AACA,SAAA,cAAA,GAAiB,cAAc,CAAC,KAAhC;AACA,SAAA,SAAA,GAAY,IAAZ;AACA,SAAA,QAAA,GAAW,KAAX;AACA,SAAA,UAAA,GAAa,KAAb;AACA,SAAA,cAAA,GAAiB,KAAjB;AACA,SAAA,cAAA,GAAiB,KAAjB;AAGC;;AAEK,EAAA,QAAQ,GAAA;AAAA;AAEb;;AAED,EAAA,QAAQ,CAAC,KAAD,EAAW;AACjB,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACD;;AA5B4B;;;mBAAlB,kB,EAAkB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,C;AAAA,C;;;QAAlB,kB;AAAkB,EAAA,SAAA,EAAA,CAAA,CAAA,gBAAA,CAAA,C;AAAA,EAAA,MAAA,EAAA;AAAA,IAAA,KAAA,EAAA,OAAA;AAAA,IAAA,SAAA,EAAA;AAAA,G;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,SAAA,EAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACX/B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,yBAAA,EAAA,CAAA;AASE,MAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA,SAAA,qEAAA,CAAA,MAAA,EAAA;AAAA,eAAU,GAAA,CAAA,QAAA,CAAA,MAAA,CAAV;AAA0B,OAA1B;AAGF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAAuB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAa,MAAA,EAAA,CAAA,YAAA;AACtC,MAAA,EAAA,CAAA,YAAA;AACF,MAAA,EAAA,CAAA,YAAA;;;;AAjBQ,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,EAAa,SAAb,EAAa,GAAA,CAAA,KAAb,EAAa,UAAb,EAAa,GAAA,CAAA,QAAb,EAAa,OAAb,EAAa,GAAA,CAAA,SAAb,EAAa,OAAb,EAAa,GAAA,CAAA,SAAb,EAAa,QAAb,EAAa,GAAA,CAAA,UAAb,EAAa,gBAAb,EAAa,GAAA,CAAA,cAAb,EAAa,gBAAb,EAAa,GAAA,CAAA,cAAb,EAAa,gBAAb,EAAa,GAAA,CAAA,cAAb;AAemB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,GAAA,CAAA,SAAA","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { NgxChartsModule, LegendPosition } from '@swimlane/ngx-charts';\nimport { BarchartItem } from 'src/app/interfaces/statInterfaces/barchart-items';\nimport { TicketService } from 'src/app/services/ticket/ticket.service';\nimport {BrowserModule} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-graph-card',\n  templateUrl: './graph-card.component.html',\n  styleUrls: ['./graph-card.component.scss']\n})\nexport class GraphCardComponent implements OnInit {\n\n  @Input()\n  items!: BarchartItem[];\n\n  view: [number,number] = [400, 200];\n\n  @Input()\n  cardTitle!:string;\n\n  // options\n  showXAxis = false;\n  legendPosition = LegendPosition.Below;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n\n  constructor(public ticketService:TicketService) { \n  }\n\n  async ngOnInit(): Promise<void> {\n\n  }\n\n  onSelect(event: any) {\n    console.log(event);\n  }\n\n}\n","<div class=\"card\">\n  <div class=\"card-header card-header-success\">\n    <div class=\"areachart-wrapper \">\n      <ngx-charts-bar-vertical\n        [view]=\"view\"\n        [results]=\"items\"\n        [gradient]=\"gradient\"\n        [xAxis]=\"showXAxis\"\n        [yAxis]=\"showYAxis\"\n        [legend]=\"showLegend\"\n        [showXAxisLabel]=\"showXAxisLabel\"\n        [showYAxisLabel]=\"showYAxisLabel\"\n        (select)=\"onSelect($event)\"\n        [legendPosition]=\"legendPosition\"\n      >\n      </ngx-charts-bar-vertical>\n    </div>\n  </div>\n  <div class=\"card-body\">\n    <h4 class=\"card-title\">{{cardTitle}}</h4>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}