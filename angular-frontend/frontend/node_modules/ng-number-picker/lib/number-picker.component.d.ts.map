{"version":3,"file":"number-picker.component.d.ts","sources":["number-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\nimport { buttonsOrientationType, sizeType, CustomClasses } from './number-picker.config';\nimport { NumberPickerService } from './number-picker.service';\nexport declare class NumberPickerComponent implements OnInit {\n    private numberPickerService;\n    private precision;\n    private eventHolder;\n    private countInterval;\n    private isInputFocused;\n    min: number;\n    max: number;\n    step: number;\n    value: number;\n    pickStartAfter: number;\n    pickTimer: number;\n    prefix: string;\n    postfix: string;\n    placeholder: string;\n    buttonsOrientation: buttonsOrientationType;\n    size: sizeType;\n    customClass: CustomClasses;\n    mouseWheel: boolean;\n    arrowKeys: boolean;\n    inputReadOnly: boolean;\n    showUpButton: boolean;\n    showDownButton: boolean;\n    valueChange: EventEmitter<number>;\n    minReached: EventEmitter<boolean>;\n    maxReached: EventEmitter<boolean>;\n    pickStarted: EventEmitter<boolean>;\n    pickStoped: EventEmitter<boolean>;\n    pickUpStarted: EventEmitter<boolean>;\n    pickUpStoped: EventEmitter<boolean>;\n    pickDownStarted: EventEmitter<boolean>;\n    pickDownStoped: EventEmitter<boolean>;\n    constructor(numberPickerService: NumberPickerService);\n    ngOnInit(): void;\n    isHorizontal(): boolean;\n    onFocus(event: FocusEvent): void;\n    onBlur(event: Event): void;\n    onMouseWheel(event: MouseWheelEvent): void;\n    private afterMouseWheels;\n    onValueChange(event: Event): void;\n    onDecrease(event: MouseEvent | MouseWheelEvent | KeyboardEvent): void;\n    onIncrease(event: MouseEvent | MouseWheelEvent | KeyboardEvent): void;\n    onMouseDown(event: MouseEvent, increase?: boolean): void;\n    private isArrowUpDown;\n    private isArowUp;\n    private loopPick;\n    onMouseUp(event: MouseEvent, increase?: boolean): void;\n    onKeyDown(event: KeyboardEvent): void;\n    onKeyUp(event: KeyboardEvent): void;\n    private afterMouseDown;\n    private afterMouseUp;\n    private afterPick;\n    private clearTimers;\n    private afterArrowKeysPressed;\n    private parseVal;\n    private getPrecision;\n    private round;\n    private canIncrease;\n    private canDecrease;\n    private onPickStarted;\n    private onPickStoped;\n    private isLeftClick;\n    private initPicker;\n}\n"]}