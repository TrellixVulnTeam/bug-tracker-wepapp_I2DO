{"version":3,"sources":["ng://angular-notification-alert/lib/angular-notification.service.ts","ng://angular-notification-alert/lib/angular-notification.component.ts","ng://angular-notification-alert/lib/directives/notwidth.directive.ts","ng://angular-notification-alert/lib/components/notif/notif.component.ts","ng://angular-notification-alert/lib/angular-notification.module.ts"],"names":["AngularNotificationService","prototype","setProperties","prop","this","properties","getProperties","Injectable","args","providedIn","AngularNotificationComponent","console","log","ngOnInit","Component","selector","template","NotwidthDirective","el","setUp","setting","highlight","color","nativeElement","style","backgroundColor","setWidth","width","type","classList","add","position","parentElement","previousSibling","remove","opacity","background","undefined","duration","setDuration","time","_this","setTimeout","visibility","change","ElementRef","Directive","Input","HostListener","NotifComponent","Service","open","close","AngularNotificationModule","NgModule","declarations","imports","BrowserModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Setting } from './models/settin';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularNotificationService {\n  properties: Setting;\n\n  constructor() { }\n  setProperties(prop: any) {\n    this.properties = prop;\n  }\n  getProperties() {\n    return this.properties;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-angular-notification',\n  template: `\n    <p>\n      angular-notification works!hhhh\n    </p>\n  `,\n  styles: []\n})\nexport class AngularNotificationComponent implements OnInit {\n\n  constructor() {\n    console.log('in lib');\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Directive, ElementRef, HostListener, Input , OnInit, Output, EventEmitter } from '@angular/core';\nimport {Setting } from '../models/settin';\n\n@Directive({\n  selector: '[libNotwidth]'\n})\nexport class NotwidthDirective  implements OnInit  {\n\n  constructor(private el: ElementRef) { }\n\n  @Input() setting: Setting;\n  title: any;\n  body: any;\n\n  ngOnInit(): void {\n    this.setUp(this.setting);\n  }\n  private highlight(color: string) {\n    this.el.nativeElement.style.backgroundColor = color;\n  }\n  private setWidth(width: string) {\n    this.el.nativeElement.style.width = width;\n  }\n  private setUp(setting: any) {\n    // width\n    this.el.nativeElement.style.width = setting.width;\n\n    // classes\n    if ( setting.type === 'warn') {\n      this.el.nativeElement.classList.add('yellow');\n    } else if ( setting.type === 'danger') {\n      this.el.nativeElement.classList.add('red');\n    } else if ( setting.type === 'success') {\n      this.el.nativeElement.classList.add('green');\n    } else {\n      this.el.nativeElement.classList.add('default');\n    }\n\n    // position\n    if ( setting.position === 'bottom right') {\n      this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n      this.el.nativeElement.classList.add('bottom-right');\n    } else if ( setting.position === 'top left') {\n      this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n      this.el.nativeElement.classList.add('top-left');\n    } else if ( setting.position === 'bottom left') {\n      this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n      this.el.nativeElement.classList.add('bottom-left');\n    } else if ( setting.position === 'center') {\n      this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n      this.el.nativeElement.classList.add('center');\n    } else {\n      this.el.nativeElement.parentElement.parentElement.previousSibling.remove();\n      this.el.nativeElement.classList.add('top-right');\n    }\n    // opacity\n    this.el.nativeElement.style.opacity = setting.opacity;\n\n    // background color\n    this.el.nativeElement.style.background = setting.background;\n\n    // duration\n    if (setting.duration === undefined) {\n      this.setDuration(4000);\n    } else {\n      this.setDuration(setting.duration);\n    }\n\n  }\n  private setDuration(time: number) {\n    setTimeout(() => {\n      // this.el.nativeElement.style.display = 'none';\n      this.el.nativeElement.style.visibility = 'hidden';\n      this.el.nativeElement.style.opacity = '0';\n    }, time);\n  }\n\n  @HostListener('click') change() {\n    console.log(' i see fire');\n  }\n}\n","import { Component, OnInit ,  Output, EventEmitter} from '@angular/core';\nimport { NotwidthDirective } from '../../directives/notwidth.directive';\nimport {Setting } from '../../models/settin';\nimport { AngularNotificationService } from '../../angular-notification.service';\n\n@Component({\n  selector: 'lib-notif',\n  templateUrl: './notif.component.html',\n  styleUrls: ['./notif.component.css']\n})\nexport class NotifComponent implements OnInit {\n\n  setting: Setting;\n  open = true;\n  constructor(private Service: AngularNotificationService) { }\n\n  ngOnInit(): void {\n   /* this.setting = {\n      width: '300px',\n      type: 'warn',\n      title: 'notification title',\n      body: 'this is a message of warning ',\n      position: 'bottom right',\n      opacity: '1',\n      duration: 10000,\n      background: 'yellow'\n    };*/\n    this.setting = this.Service.getProperties();\n    console.log('juuuu ', this.setting);\n  }\n\n  close(): void {\n    this.open = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AngularNotificationComponent } from './angular-notification.component';\nimport { NotwidthDirective } from './directives/notwidth.directive';\nimport { NotifComponent } from './components/notif/notif.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AngularNotificationService } from './angular-notification.service';\n\n\n\n@NgModule({\n  declarations: [AngularNotificationComponent, NotwidthDirective, NotifComponent],\n  imports: [\n    BrowserModule\n  ],\n  exports: [AngularNotificationComponent, NotifComponent ]\n})\nexport class AngularNotificationModule { }\n"]}