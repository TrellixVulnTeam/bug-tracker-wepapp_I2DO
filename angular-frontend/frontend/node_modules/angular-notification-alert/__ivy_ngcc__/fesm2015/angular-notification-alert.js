import { ɵɵdefineInjectable, Injectable, Component, ElementRef, Directive, Input, HostListener, NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function NotifComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵelementStart(1, "div", 2);
    ɵngcc0.ɵɵelementStart(2, "h4", 3);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "span", 4);
    ɵngcc0.ɵɵlistener("click", function NotifComponent_div_0_Template_span_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.close(); });
    ɵngcc0.ɵɵtext(5, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "div", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(7, "br");
    ɵngcc0.ɵɵelement(8, "br");
    ɵngcc0.ɵɵelement(9, "br");
    ɵngcc0.ɵɵelement(10, "br");
    ɵngcc0.ɵɵelement(11, "br");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("setting", ctx_r0.setting);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.setting.title);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r0.setting.body, ɵngcc0.ɵɵsanitizeHtml);
} }
class AngularNotificationService {
    constructor() { }
    setProperties(prop) {
        this.properties = prop;
    }
    getProperties() {
        return this.properties;
    }
}
AngularNotificationService.ɵfac = function AngularNotificationService_Factory(t) { return new (t || AngularNotificationService)(); };
AngularNotificationService.ɵprov = ɵɵdefineInjectable({ factory: function AngularNotificationService_Factory() { return new AngularNotificationService(); }, token: AngularNotificationService, providedIn: "root" });
AngularNotificationService.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularNotificationService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();

class AngularNotificationComponent {
    constructor() {
        console.log('in lib');
    }
    ngOnInit() {
    }
}
AngularNotificationComponent.ɵfac = function AngularNotificationComponent_Factory(t) { return new (t || AngularNotificationComponent)(); };
AngularNotificationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AngularNotificationComponent, selectors: [["lib-angular-notification"]], decls: 2, vars: 0, template: function AngularNotificationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, " angular-notification works!hhhh ");
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
AngularNotificationComponent.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularNotificationComponent, [{
        type: Component,
        args: [{
                selector: 'lib-angular-notification',
                template: `
    <p>
      angular-notification works!hhhh
    </p>
  `
            }]
    }], function () { return []; }, null); })();

class NotwidthDirective {
    constructor(el) {
        this.el = el;
    }
    ngOnInit() {
        this.setUp(this.setting);
    }
    highlight(color) {
        this.el.nativeElement.style.backgroundColor = color;
    }
    setWidth(width) {
        this.el.nativeElement.style.width = width;
    }
    setUp(setting) {
        // width
        this.el.nativeElement.style.width = setting.width;
        // classes
        if (setting.type === 'warn') {
            this.el.nativeElement.classList.add('yellow');
        }
        else if (setting.type === 'danger') {
            this.el.nativeElement.classList.add('red');
        }
        else if (setting.type === 'success') {
            this.el.nativeElement.classList.add('green');
        }
        else {
            this.el.nativeElement.classList.add('default');
        }
        // position
        if (setting.position === 'bottom right') {
            this.el.nativeElement.parentElement.parentElement.previousSibling.remove();
            this.el.nativeElement.classList.add('bottom-right');
        }
        else if (setting.position === 'top left') {
            this.el.nativeElement.parentElement.parentElement.previousSibling.remove();
            this.el.nativeElement.classList.add('top-left');
        }
        else if (setting.position === 'bottom left') {
            this.el.nativeElement.parentElement.parentElement.previousSibling.remove();
            this.el.nativeElement.classList.add('bottom-left');
        }
        else if (setting.position === 'center') {
            this.el.nativeElement.parentElement.parentElement.previousSibling.remove();
            this.el.nativeElement.classList.add('center');
        }
        else {
            this.el.nativeElement.parentElement.parentElement.previousSibling.remove();
            this.el.nativeElement.classList.add('top-right');
        }
        // opacity
        this.el.nativeElement.style.opacity = setting.opacity;
        // background color
        this.el.nativeElement.style.background = setting.background;
        // duration
        if (setting.duration === undefined) {
            this.setDuration(4000);
        }
        else {
            this.setDuration(setting.duration);
        }
    }
    setDuration(time) {
        setTimeout(() => {
            // this.el.nativeElement.style.display = 'none';
            this.el.nativeElement.style.visibility = 'hidden';
            this.el.nativeElement.style.opacity = '0';
        }, time);
    }
    change() {
        console.log(' i see fire');
    }
}
NotwidthDirective.ɵfac = function NotwidthDirective_Factory(t) { return new (t || NotwidthDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NotwidthDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NotwidthDirective, selectors: [["", "libNotwidth", ""]], hostBindings: function NotwidthDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function NotwidthDirective_click_HostBindingHandler() { return ctx.change(); });
    } }, inputs: { setting: "setting" } });
NotwidthDirective.ctorParameters = () => [
    { type: ElementRef }
];
NotwidthDirective.ctorParameters = () => [
    { type: ElementRef }
];
NotwidthDirective.propDecorators = {
    setting: [{ type: Input }],
    change: [{ type: HostListener, args: ['click',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotwidthDirective, [{
        type: Directive,
        args: [{
                selector: '[libNotwidth]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { change: [{
            type: HostListener,
            args: ['click']
        }], setting: [{
            type: Input
        }] }); })();

class NotifComponent {
    constructor(Service) {
        this.Service = Service;
        this.open = true;
    }
    ngOnInit() {
        /* this.setting = {
           width: '300px',
           type: 'warn',
           title: 'notification title',
           body: 'this is a message of warning ',
           position: 'bottom right',
           opacity: '1',
           duration: 10000,
           background: 'yellow'
         };*/
        this.setting = this.Service.getProperties();
        console.log('juuuu ', this.setting);
    }
    close() {
        this.open = false;
    }
}
NotifComponent.ɵfac = function NotifComponent_Factory(t) { return new (t || NotifComponent)(ɵngcc0.ɵɵdirectiveInject(AngularNotificationService)); };
NotifComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NotifComponent, selectors: [["lib-notif"]], decls: 1, vars: 1, consts: [["class", "notif-container", 4, "ngIf"], [1, "notif-container"], ["libNotwidth", "", 1, "notif-box", 3, "setting"], [1, "title"], ["title", "close", 1, "close", 3, "click"], [1, "notif-body", 3, "innerHTML"]], template: function NotifComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NotifComponent_div_0_Template, 12, 3, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.open);
    } }, directives: [ɵngcc1.NgIf, NotwidthDirective], styles: [".notif-box[_ngcontent-%COMP%]{font-family:'Noto Sans SC',sans-serif;padding:10px;box-shadow:0 1px 0 -1px rgb(0 0 0 / 20%),0 1px 14px -2px rgb(0 0 0 / 14%),0 1px 3px 0 rgb(0 0 0 / 12%);border-radius:4px;border:0;width:30%;border-left:6px solid #6772e5;position:absolute;transition:opacity .6s,visibility .6s;margin-top:10px;z-index:10}.title[_ngcontent-%COMP%]{width:92%;display:inline-block;font-size:16px;margin-top:5px;color:#242832;margin-bottom:10px}.close[_ngcontent-%COMP%]{cursor:pointer;float:right;margin-right:5px}.notif-body[_ngcontent-%COMP%]{font-size:14px;color:#97999e}.green[_ngcontent-%COMP%]{border-left:6px solid #00d563}.red[_ngcontent-%COMP%]{border-left:6px solid #ef3934}.yellow[_ngcontent-%COMP%]{border-left:6px solid #ff9500}.default[_ngcontent-%COMP%]{border-left:6px solid #6772e5}.top-right[_ngcontent-%COMP%]{top:0;right:15px}.bottom-left[_ngcontent-%COMP%]{bottom:-30vh;left:15px}.bottom-right[_ngcontent-%COMP%]{bottom:15px;right:15px}.top-left[_ngcontent-%COMP%]{top:15px;left:15px}.center[_ngcontent-%COMP%]{top:50%;left:50%;transform:translate(-50%,-50%)}"] });
NotifComponent.ctorParameters = () => [
    { type: AngularNotificationService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotifComponent, [{
        type: Component,
        args: [{
                selector: 'lib-notif',
                template: "<div *ngIf=\"open\" class=\"notif-container\">\n    <div class=\"notif-box\" libNotwidth  [setting] = setting >\n        <h4 class=\"title\">{{setting.title}}</h4><span class=\"close\" title=\"close\" (click)=\"close()\">\u00D7</span>\n        <div class=\"notif-body\" [innerHTML]=setting.body ></div>\n    </div>\n    <br> \n    <br><br><br><br>\n</div> \n  ",
                styles: [".notif-box{font-family:'Noto Sans SC',sans-serif;padding:10px;box-shadow:0 1px 0 -1px rgb(0 0 0 / 20%),0 1px 14px -2px rgb(0 0 0 / 14%),0 1px 3px 0 rgb(0 0 0 / 12%);border-radius:4px;border:0;width:30%;border-left:6px solid #6772e5;position:absolute;transition:opacity .6s,visibility .6s;margin-top:10px;z-index:10}.title{width:92%;display:inline-block;font-size:16px;margin-top:5px;color:#242832;margin-bottom:10px}.close{cursor:pointer;float:right;margin-right:5px}.notif-body{font-size:14px;color:#97999e}.green{border-left:6px solid #00d563}.red{border-left:6px solid #ef3934}.yellow{border-left:6px solid #ff9500}.default{border-left:6px solid #6772e5}.top-right{top:0;right:15px}.bottom-left{bottom:-30vh;left:15px}.bottom-right{bottom:15px;right:15px}.top-left{top:15px;left:15px}.center{top:50%;left:50%;transform:translate(-50%,-50%)}"]
            }]
    }], function () { return [{ type: AngularNotificationService }]; }, null); })();
NotifComponent.ctorParameters = () => [
    { type: AngularNotificationService }
];

class AngularNotificationModule {
}
AngularNotificationModule.ɵfac = function AngularNotificationModule_Factory(t) { return new (t || AngularNotificationModule)(); };
AngularNotificationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AngularNotificationModule });
AngularNotificationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            BrowserModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularNotificationModule, [{
        type: NgModule,
        args: [{
                declarations: [AngularNotificationComponent, NotwidthDirective, NotifComponent],
                imports: [
                    BrowserModule
                ],
                exports: [AngularNotificationComponent, NotifComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularNotificationModule, { declarations: function () { return [AngularNotificationComponent, NotwidthDirective, NotifComponent]; }, imports: function () { return [BrowserModule]; }, exports: function () { return [AngularNotificationComponent, NotifComponent]; } }); })();

/*
 * Public API Surface of angular-notification
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AngularNotificationComponent, AngularNotificationModule, AngularNotificationService, NotifComponent, NotwidthDirective };

//# sourceMappingURL=angular-notification-alert.js.map